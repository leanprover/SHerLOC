"builtin.module"() ({
  "func.func"() <{function_type = () -> tensor<i1>, sym_name = "main"}> ({
    %0 = "stablehlo.constant"() <{value = dense<[[[-4.07882929, 0.10345453], [3.95936775, 0.182167158], [-1.8219012, -4.8078413], [2.36134338, 0.374701232], [0.128649756, 1.22263598], [-3.09423828, -6.52680492], [-0.486474901, -0.499504626], [-1.13961768, -0.457600832], [-3.35133338, -2.06962872], [3.71505165, 0.420098811], [-0.879057407, 1.1707021], [-0.550113559, 2.29026461], [-0.742595374, 1.17629492], [1.32067657, 1.71534801], [-2.61802197, 0.242558643], [-2.48261404, 1.57736623]]]> : tensor<1x16x2xf32>}> : () -> tensor<1x16x2xf32>
    %1 = "stablehlo.constant"() <{value = dense<[[[-2.0630188, -1.5816139], [-0.709697485, -4.2396903]], [[-1.26467288, -5.61277342], [0.423362285, -0.584941268]], [[-2.145080e+00, -1.7616626], [-3.43366671, -3.3343122]]]> : tensor<3x2x2xf32>}> : () -> tensor<3x2x2xf32>
    %2 = "stablehlo.constant"() <{value = dense<[[[0.000000e+00, 0.000000e+00], [0.0440592133, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.0771036223, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.154207245, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.418562531, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.176236853, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.418562531, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.418562531, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.418562531, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.418562531, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.0991332307, 0.000000e+00], [0.000000e+00, 0.000000e+00], [0.418562531, 0.000000e+00], [0.000000e+00, 0.000000e+00]]]> : tensor<1x33x2xf32>}> : () -> tensor<1x33x2xf32>
    %3 = "stablehlo.uniform_quantize"(%1) : (tensor<3x2x2xf32>) -> tensor<3x2x2x!quant.uniform<i8:f32, 0.0039189298947652183:-128>>
    %4 = "stablehlo.uniform_quantize"(%0) : (tensor<1x16x2xf32>) -> tensor<1x16x2x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>
    %5 = "stablehlo.convolution"(%4, %3) <{batch_group_count = 1 : i64, dimension_numbers = #stablehlo.conv<[b, 0, f]x[0, i, o]->[b, 0, f]>, feature_group_count = 1 : i64, lhs_dilation = array<i64: 2>, padding = dense<2> : tensor<1x2xi64>}> : (tensor<1x16x2x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>, tensor<3x2x2x!quant.uniform<i8:f32, 0.0039189298947652183:-128>>) -> tensor<1x33x2x!quant.uniform<i32:f32, 1.536827283429924E-5>>
    %6 = "stablehlo.uniform_quantize"(%5) : (tensor<1x33x2x!quant.uniform<i32:f32, 1.536827283429924E-5>>) -> tensor<1x33x2x!quant.uniform<i8:f32, 0.011014803718118107:-128>>
    %7 = "stablehlo.uniform_dequantize"(%6) : (tensor<1x33x2x!quant.uniform<i8:f32, 0.011014803718118107:-128>>) -> tensor<1x33x2xf32>
    %8 = "stablehlo.custom_call"(%2, %7) <{call_target_name = "check.eq"}> : (tensor<1x33x2xf32>, tensor<1x33x2xf32>) -> tensor<i1>
    "func.return"(%8) : (tensor<i1>) -> ()
  }) : () -> ()
}) {jax.uses_shape_polymorphism = true} : () -> ()

