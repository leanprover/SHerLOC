"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<20x20xcomplex<f32>>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %3:2 = "func.call"() <{callee = @inputs}> : () -> (tensor<20x20xcomplex<f32>>, tensor<1x20xcomplex<f32>>)
    %4 = "func.call"() <{callee = @expected}> : () -> tensor<20x20xcomplex<f32>>
    %5 = "stablehlo.broadcast_in_dim"(%3#1) <{broadcast_dimensions = array<i64: 0, 1>}> : (tensor<1x20xcomplex<f32>>) -> tensor<20x20xcomplex<f32>>
    %6 = "stablehlo.real"(%3#0) : (tensor<20x20xcomplex<f32>>) -> tensor<20x20xf32>
    %7 = "stablehlo.real"(%5) : (tensor<20x20xcomplex<f32>>) -> tensor<20x20xf32>
    %8 = "stablehlo.compare"(%6, %7) <{compare_type = #stablehlo<comparison_type FLOAT>, comparison_direction = #stablehlo<comparison_direction EQ>}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xi1>
    %9 = "stablehlo.compare"(%6, %7) <{compare_type = #stablehlo<comparison_type FLOAT>, comparison_direction = #stablehlo<comparison_direction GT>}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xi1>
    %10 = "stablehlo.imag"(%3#0) : (tensor<20x20xcomplex<f32>>) -> tensor<20x20xf32>
    %11 = "stablehlo.imag"(%5) : (tensor<20x20xcomplex<f32>>) -> tensor<20x20xf32>
    %12 = "stablehlo.compare"(%10, %11) <{compare_type = #stablehlo<comparison_type FLOAT>, comparison_direction = #stablehlo<comparison_direction GT>}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xi1>
    %13 = "stablehlo.select"(%8, %12, %9) : (tensor<20x20xi1>, tensor<20x20xi1>, tensor<20x20xi1>) -> tensor<20x20xi1>
    %14 = "stablehlo.select"(%13, %3#0, %5) : (tensor<20x20xi1>, tensor<20x20xcomplex<f32>>, tensor<20x20xcomplex<f32>>) -> tensor<20x20xcomplex<f32>>
    "stablehlo.custom_call"(%14, %4) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<20x20xcomplex<f32>>, tensor<20x20xcomplex<f32>>) -> ()
    "func.return"(%14) : (tensor<20x20xcomplex<f32>>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> (tensor<20x20xcomplex<f32>>, tensor<1x20xcomplex<f32>>), res_attrs = [{mhlo.layout_mode = "default"}, {mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xcomplex<f32>>}> : () -> tensor<20x20xcomplex<f32>>
    %2 = "stablehlo.constant"() <{value = dense<[[(3.89995646,1.18324041), (-0.138270736,-0.795118212), (3.174470e+00,-5.12569571), (-0.427660495,2.74200273), (0.336733848,-4.47429609), (1.97590423,2.20496082), (-1.89900863,0.0334786363), (-0.420227021,-3.84763384), (4.25858545,-4.35283947), (-1.09363472,-1.88356757), (3.2829175,-4.9386816), (0.998929977,-2.37306833), (0.967059314,1.60305882), (1.31840575,-0.33432126), (1.46083915,6.14714813), (2.24759436,-0.0597347356), (-2.65085149,2.16980195), (-1.69338906,-0.667414367), (-1.70806468,-3.46945477), (7.544950e-01,0.385374725)]]> : tensor<1x20xcomplex<f32>>}> : () -> tensor<1x20xcomplex<f32>>
    "func.return"(%1, %2) : (tensor<20x20xcomplex<f32>>, tensor<1x20xcomplex<f32>>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xcomplex<f32>>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xcomplex<f32>>}> : () -> tensor<20x20xcomplex<f32>>
    "func.return"(%0) : (tensor<20x20xcomplex<f32>>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

