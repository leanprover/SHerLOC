"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %2 = "func.call"() <{callee = @inputs}> : () -> tensor<20x20xf32>
    %3 = "func.call"() <{callee = @expected}> : () -> tensor<20x20xf32>
    %4 = "stablehlo.floor"(%2) : (tensor<20x20xf32>) -> tensor<20x20xf32>
    "stablehlo.custom_call"(%4, %3) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> ()
    "func.return"(%4) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0x133F86BFC5DA963F8B79A2BF3543A24020409440EF67833D1D550ABFDE0B07C00007B13E895E9C3F7FF7A9BFFFAD95C0B3F9413EE3846ABFCD0BDF3E631CB540CE3C963FDF3A00C0C4F8DB3ED02983BFEAB283BF1838B83F7A3205BF96D763C00A24C73FD5640A40896E8D3FBAEEA03F936CAA3F2ED2A9C06561A5C013A1CC40CF731440E5D53740342BDE405BC4B040C79E83C041A92E4006AEB4BE1479803FB2EC06C07EC9333FC86ECC3F74E43A40D07B1CC03BB093402C0A64BFA61638401E5EC33F86C4AF3F346D0C3F16604D40FEEB9040520E503F03A8883F1806F63FCD26683FC2B3943FFC1D86BF3FEEEC40819E8ABF9EED81BF3A575D4019BC8240906CD4BF5C4D324003103BC028CA963F41914DC05D5C0140A681DB3ED6A04040238B60C086BED9BFA5C674BB30F76240EBB999BF5328C33FD3154C40446330C0E3D8A34080AC4DC0C087313F5A232ABFDAD2A33F84CF1DBE524714C071D6703F8DE5E0BC8580893FA07716BFD0D3D140EC96F7C07A418B3F6676F140B71DC53E697B8B40FD308FBF339D844004422AC091FBEDBF3C1D9440240531C0AA320BC0CF55803DFEB504C071CE594068E24840007A7E3F663A83BE43DC003F2A932A3F20BA11C020C62CBF541B52BF78EB1D40912265C0AFAC093F77CC99404872AEBF2A03774054EE96C0489301C034B24AC0012D8A3F7430CBBE9631D5BFD852CC3F340333C01DBFB83E32B6A4C0E19ABEC0D3734640F0E3AD40F22CA2BF1C9D73C0A51F92BF1522F5C071BA1BC0B6DA8DBFABBA474021B035C0CACBC34054895C4080F38640BEDB84BF5B9526BFB2DE8E3FD20D21C04E7CCB408E293DC06F573FC051E05240354698BFF30D4DC0307E273F778AB13FAB39E23FF432973D786176C0ECAB4E40B5370FC0456F5FC0530CBDBFC6914540D8D4E03F1F332240925118BF36BD953F05E0D1C0EC3F79C0D250283FB3129CC09AE109C0B6E344C00A5A32C023E5533F16822FC02DAEB0406052373F3AFFED3FDFAA6B40BC7AEE3F3B27A43FC70E41C08BB1A0BF4F63D83F299FA53EBDC80540B35B7840757D3DBFB45BA8BFB05845BF9A076EC0EF839F40091950C0456F1AC0BA10DB3EE96210BFF020BBBFBF9B35C05C795340B17EE6C0E1C880C03ED6ACC033F8D5BF4794F83EAC89F03FC531D23DFB0EC3C0B3D6AF400E3C6CBE562E83C0BE08B7402BFE1ABE7A9EDFBF51297040542937C0305E614026FED2401F9E59406B25DDBFE22B8BC045A1723F691016C01D551840E6F919C0457ADFBE52520CC04AFB35C06B5E62BF7370F53DC532C240B132753F247405BD501044C0D530BBBF9D5921C0E9A754C0BBEEF840A0A92FBFF4B60640D623A040C3CFF83D1E735B40C5B9F4C072FA633F54162DC0E434AB3F5F5000C0BAFB31C0D7DD8540E9F8F33F9E6B98C0ECE23EC05F2CC0C0A377A9BF9C1870BF658FD2BFCA58D5C05F32FD3DC0264FBF3AB345403D8DA1BF299B4B3FAD25943F9C1D47BD5BBF9D3F475862BF1F991CBFA8ED62C047DD3DC0B60B103D7F86A8BFE6D14C3F43402ABE47D12B40FC380AC0EAA905BD6B3C7DC0032CAA3FDA2812C0C620BAC03ED787C047BD9B3FA146EE3D819043405AAA4C407E76D5C0BD6BA53FFC512840535B5640DD22093C7A67904093DD0CC17EDAC0C09728AEC0143198BF3861BDC0DAF27E40D460ECBE0526DFBF89D928C066FBE93FEE5ABDBF1A8CE83FF3C9CF400D03113F361593C0FE3010C043EA933FB8F219C0D6580DC0A440EDBF323A00C0D9CD19BFE9300E40FDE2613F8D6ADBBF60D413C06C20C23EE8C3D0BE124A8CC0A043C5BF86C14BBF8A1D1240F788C53F29BA5440C2EA8C3FD8728BC03BA71A3DF80DDDC06FD696BFC4D43140D590EBBF531DB5C0031A813CC545A9BF9C5EA43F799D07C0C338CDC0D4C421C0881E6CC0AFF9DEBF05272C3E494C2740FDA188BE176477BF505AFCC0F4DECB3FDCE84DBFBBB3EEBE545B7E3F7D412E3F2EEC004055894040DB14F9BF5D588140DCF09CBFAEB61440EDA8DF3FC55AE1BF5FD6D0BF4C804440E83E5EC03F2B2240CAA92B4058CC61C095898FC080637940A3583E3EAE81F93F02F0E7BF5A0795408623A3C0627D23C08732993F169777C07CE9803E4C550040DD7537C057D15FC019D70A3E83E668C0E928D9BF73D9A6C04E101EC004CF9D3FF8BF2FC02046A1C0E7FC473FF5D486C04C929FBF84D76FBD7A03D73F39049BC0D6E09FBF95186A40E21AE6BF72434BC0"> : tensor<20x20xf32>}> : () -> tensor<20x20xf32>
    "func.return"(%1) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xf32>}> : () -> tensor<20x20xf32>
    "func.return"(%0) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

