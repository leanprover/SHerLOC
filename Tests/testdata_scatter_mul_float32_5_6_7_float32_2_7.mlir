"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<5x6x7xf32>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %3 = "stablehlo.constant"() <{value = dense<[[0, 1], [2, 3]]> : tensor<2x2xi64>}> : () -> tensor<2x2xi64>
    %4:2 = "func.call"() <{callee = @inputs}> : () -> (tensor<5x6x7xf32>, tensor<2x7xf32>)
    %5 = "func.call"() <{callee = @expected}> : () -> tensor<5x6x7xf32>
    %6 = "stablehlo.scatter"(%4#0, %3, %4#1) <{scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [1], inserted_window_dims = [0, 1], scatter_dims_to_operand_dims = [0, 1], index_vector_dim = 1>, unique_indices = true}> ({
    ^bb0(%arg0: tensor<f32>, %arg1: tensor<f32>):
      %7 = "stablehlo.multiply"(%arg0, %arg1) : (tensor<f32>, tensor<f32>) -> tensor<f32>
      "stablehlo.return"(%7) : (tensor<f32>) -> ()
    }) : (tensor<5x6x7xf32>, tensor<2x2xi64>, tensor<2x7xf32>) -> tensor<5x6x7xf32>
    "stablehlo.custom_call"(%6, %5) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<5x6x7xf32>, tensor<5x6x7xf32>) -> ()
    "func.return"(%6) : (tensor<5x6x7xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> (tensor<5x6x7xf32>, tensor<2x7xf32>), res_attrs = [{mhlo.layout_mode = "default"}, {mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0xBC29303FA87709C0A9079B3F4259F4BF44E06740A921CC3FB49221C0F48F0740423AC9BE55A2C4BF2C5FA63FE25944BF1B534E3F9D954AC0CBCF3CC089543CC0E696C13FF641D83F2B3A7340EF0124BE5B262740E7EB53C0BE0520C0549089BF6D9027C01B4462BF783F983FC22C3E40B353AE3F6B5B08C005C0243F603D17C059C04940D814B6C06EFA243F07B4AEC00179AAC0706221405B862BC01ECE23C01C3DDEBF1467ADBF366019401B1C19C0A0D93740DEF52A40AAC7CBC04064E5BF9647F03E9A2EBCBE8B0AB1C07E1A693FAEDBA03EB955ADBF92C53F40432770400A06A6C05B99BA3E2CED37C05B2C9B3FCF7E01C0B2249C3F3750F3BF4BD4F63F37627BC04C5B59BEC4845D4025C385BFAFF4C43EC49A3B403575A3BFC4F51C40D412C53EEC9431C0BEEF473F869E663F1137CE3BD62B37C0A189E03F558E71400DB36440C2F913BF4A1E283E789A53C09109C0C009B46E3F27B0B940597F3A3F9D0801C05AC562402A3D6140AF7599C0B5519F3F1F6C5CBE2EEB6B40A02F904002122BC03C1091C0D2E1C6BF7DC7F03E3A21B73F6CB5943F74C18FBE35471D403D5B77C03B39703FE7E4A43EABFC26BFF450C63FA63FB53E72CC75C0C88CDFBFB93D5DC02B5BD9BEF86D2E403712B0BF659FA7C0068D5FC0A3B682C0B252D23E1D7623BFA73E0C40FFFB2CBF8AAD03BF254DB240816878C076A01C404DC43DC08C6A4FBE6F2620C072C72B40EB78B9BF4FBC58BEC91C2B3F1726384039D049405B33703EB3C12D40F8511BBF84E6D5C0492601BFC0B855BE8EB43E3F3BF7A4BFA055893F0EDD3740CE0A5640671656C07A201840C97B9BBFC2BC5F3F69C58CBF452332BF2B07B740819A51C0D47D0AC0CDAC74C06D428EBF2EB75340E4150DC0461A80C061FAEFBF5C36D03F5818BD3BE43E843EA6A38C40010791BFA8486C40BA2913C10BCFA13F9C14C2BFEE24FDBF7E17E3BF2C4024C037728A4026F7CDBF0DE609C18D6F76BFA771723F1A7BBABF6E2387BFDC1F7440B2C722BFF0BBB53C7634993F4122D33F626C9ABF7198803EDE5704C0C52E7CC0E0A1D7BF6BE5E23ED34AAABF21C983BF9BA3A5BF4575EE3D471019C0871AA140749DAB40FD286E4053E263BF019B68C0DA4AA2C0B660C43F8A7102C0F5FEBBBE5A4B9F4055CA0F407C3727C0278FE33F"> : tensor<5x6x7xf32>}> : () -> tensor<5x6x7xf32>
    %2 = "stablehlo.constant"() <{value = dense<[[-1.70610929, 7.49377823, -3.67714238, -2.63489556, -0.961916625, -1.03216183, 5.98534441], [-3.48100448, 7.4589839, -0.44153735, -4.18079281, -6.95839595, -0.993767797, 5.10888433]]> : tensor<2x7xf32>}> : () -> tensor<2x7xf32>
    "func.return"(%1, %2) : (tensor<5x6x7xf32>, tensor<2x7xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<5x6x7xf32>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0xBC29303FA87709C0A9079B3F4259F4BF44E06740A921CC3FB49221C0BD4867C08E7E3CC04EC3B440A52F5BC097DF3C3FDDF554BF349197C1CBCF3CC089543CC0E696C13FF641D83F2B3A7340EF0124BE5B262740E7EB53C0BE0520C0549089BF6D9027C01B4462BF783F983FC22C3E40B353AE3F6B5B08C005C0243F603D17C059C04940D814B6C06EFA243F07B4AEC00179AAC0706221405B862BC01ECE23C01C3DDEBF1467ADBF366019401B1C19C0A0D93740DEF52A40AAC7CBC04064E5BF9647F03E9A2EBCBE8B0AB1C07E1A693FAEDBA03EB955ADBF92C53F40432770400A06A6C05B99BA3E2CED37C05B2C9B3FCF7E01C0B2249C3F3750F3BF4BD4F63F37627BC04C5B59BEC4845D4025C385BFAFF4C43EC49A3B403575A3BFC4F51C40D412C53EEC9431C0BEEF473F869E663F1137CE3BD62B37C0A189E03F558E71400DB36440C2F913BF4A1E283E789A53C09109C0C009B46E3F27B0B940597F3A3F9D0801C05AC562402A3D6140AF7599C0B5519F3F1F6C5CBE2EEB6B40A02F904002122BC03C1091C0D2E1C6BF7DC7F03E3A21B73F6CB5943F74C18FBE35471D403D5B77C0090E51C02BBE19404476933E9E47CFC064A61DC04A447440E7C20EC1B93D5DC02B5BD9BEF86D2E403712B0BF659FA7C0068D5FC0A3B682C0B252D23E1D7623BFA73E0C40FFFB2CBF8AAD03BF254DB240816878C076A01C404DC43DC08C6A4FBE6F2620C072C72B40EB78B9BF4FBC58BEC91C2B3F1726384039D049405B33703EB3C12D40F8511BBF84E6D5C0492601BFC0B855BE8EB43E3F3BF7A4BFA055893F0EDD3740CE0A5640671656C07A201840C97B9BBFC2BC5F3F69C58CBF452332BF2B07B740819A51C0D47D0AC0CDAC74C06D428EBF2EB75340E4150DC0461A80C061FAEFBF5C36D03F5818BD3BE43E843EA6A38C40010791BFA8486C40BA2913C10BCFA13F9C14C2BFEE24FDBF7E17E3BF2C4024C037728A4026F7CDBF0DE609C18D6F76BFA771723F1A7BBABF6E2387BFDC1F7440B2C722BFF0BBB53C7634993F4122D33F626C9ABF7198803EDE5704C0C52E7CC0E0A1D7BF6BE5E23ED34AAABF21C983BF9BA3A5BF4575EE3D471019C0871AA140749DAB40FD286E4053E263BF019B68C0DA4AA2C0B660C43F8A7102C0F5FEBBBE5A4B9F4055CA0F407C3727C0278FE33F"> : tensor<5x6x7xf32>}> : () -> tensor<5x6x7xf32>
    "func.return"(%0) : (tensor<5x6x7xf32>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

