"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<20x20xi1>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %2 = "func.call"() <{callee = @inputs}> : () -> tensor<20x20xf32>
    %3 = "func.call"() <{callee = @expected}> : () -> tensor<20x20xi1>
    %4 = "stablehlo.is_finite"(%2) : (tensor<20x20xf32>) -> tensor<20x20xi1>
    "stablehlo.custom_call"(%4, %3) <{call_target_name = "check.expect_eq", has_side_effect = true}> : (tensor<20x20xi1>, tensor<20x20xi1>) -> ()
    "func.return"(%4) : (tensor<20x20xi1>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0x93268AC05C8034C0A77E10C0810E1DC0503687BFCE0775C0DE77B7BEC67A61409211353F07B9A6C0C848C93F01C097BF5729A2BF89470E3F760CB640A6458F3F636CA2C036472F3FD62E56405C962140168F244085FA91C0025B9C3F179688BF47CCF04077EE8C4051352640BC394CC03682CBBF0768B33F6062633F6930753F036868BF5B258AC00CB51240AF13D83F37F224C0D6993C40F644A8BFB4E32F3FB2F599BFC8A14940C7710B3FD543CFBF8A799CBF7D77F4BF9DAB0DBF7BA2BC3E32E441BDFD6C8ABFF38028C05961F9C05CA38E3FD6F2BE3FD53B9FC0FBB849C0A82140C09E73BE3F55A229407DE99C3F188FA93F407AEA407DAE0C407A68964075EFB4BF55ED833FEB5332C02C7516C0D17EDF3F8164BA3F92540B4089D2EA3F699ADCBFC698203EC8AD0740D7766040E304A640A850D43F13138BBF3624D33F1EF72D40722D95C0ABAA72BF13B30BC0B6FF23410A0C27401B9458C0EDFC724046341B40559518401D8731BF108623BFC624E5C020F385C04DE03D40E8722FBFB3E243C094C2643F6554A5BD9941344019943740BD416D40B54EBFC00B88F9BF784DA94091E501C0914BDFC04FAE6F401B58613F9E53834007E6C0BCFAA28A407A8503402759B03F041A3B40F31EA1BF72561C40F552AABE95995840A406703FA80104409ABA43BF714C4CBFD3180741CD86C43E0EDE10BFA5BC2440260A4640DF0B95BF848287BFAB3CDD3F28929CC0D8348C409FDB37C05C5D0740B0857B3F56D3D1BF9FE859BF12140A40844320C08A6535409FA229BFA00A9CC036B7333F6B769B3F6844B3C07C58AD400A9938C05862DEC041DD03404202BA403BC8564028C104403043B63E5D6718BE6D53FA3D2BE8A73F3A1C8440BCB0C03F66C61E40C376B54056C4B8BF408100BFE380C7C066AA89BE6EB65BC08F6BC2BF9BA42EBFDD3C8B404B0CBA3E25C62F3E5DB5C8C067DA00C1EC19BEC0D91012BD7C1366C06777BCBFFA32A2C0DCA10540A2789B3FA48DDB3FAB5802404E1A70BF593B7E3E060C1B3F9A5E883F0F424240764207C0D437A5C0F1732EBF61918C40AD0B07C09DD463C0ECC78E40D900E03FAB849ABF5502CABF01D22FBFA27490C06A2B98BFD9EB7F3F96EA0F3FFBF22DC03E46873EBC9794BF994C6A3FE6F481BE9A47E33FB1BB0140A09C163F73341B405FA82DC0687202BDC59039C0DE930440C05C51C0C4316A40D6C91740A6DC5DBF247077BFE6801A404BEC4DBE0A60AC3FA994823F56A2EC3F92E84140791D3FC0B2565E3FB86FD8BF66672DC088D1AA3F515586BF089EBCBF6505A5BFA2AA35C0BA63A34097FB53C014C9E13F1BB0DD3F842651C089416A3F9E357240F058D0BE45537D40A8A09B40661294401E36AA409D4AB4C0C5CD3E3F5C80FA3F48F8A040C7AACCBF398E89C0F038C1BEBE9E3240D815C03F687F09C00A6978BFB4C4B640D1F181BF658BC53D8D909C4085A6D73F3699F63F4ABBBB3E57A4C13EF03976C0B5C20940238A853E289E1E40B72E09407F8BB13E4E241E41FBF602C06E6BE3C0C14D4CBFB7D9084011DF4EC0FB64D5C071C8CC3F987149BEF0903EC0842733C060A191BE53033CBF2276D63FA66C22C028CD16BFF86A073F1581C23F4296CEBF4050D83E2E6E7BBF6BAD953F611862BDB9916FBEAF7EA1BF1223A9BF98489A3F3B9E6D4084EA0140FE7B8B400831BB3F2587174090AD8EC06836DEBF5E7F96BF39F72840603B823FBF8DEFBDCDDE2BC03703DC3FD87A26BF4AFB64408B24BD3E14FD104067D2043ED60D923F9076053F504F25C0924C38C0C7BCEAC0BFD381BDA16A08BFEFD4E5C0CC05CBC0A481A5BF9DE38CBFDED035C031AFDA3F210CF6BF63B0983F5D4749C08B47F0BF51DA483F9120EB40B4C36540DA0F7640242C5A4033F981BED269803ED65113BF55D786BF85F93F40FC5161C053E325C0F1850A4034975EBFA768F93F2AF0B9BD74E302C052A26DBD82E35BC05E591D4033B61B403F7E953F84530940FCEF3840F1C399C01B10073F08122BC0D6D38DC0A723B43EC75A36BF6B709CC0602A83BE7953C43C008881BFD3347EBED3A0083E7999C33F6BE43FC08DFE49BF8779D9BFFC98A0BF62B5BE3FFB8D2ABE4093BB3F1B009BC072E3A140B69223C0935D93402CD98C3FEC0267BEB2B4783F8FF7D43F5D6D85BFC6A1C3BF23B40BBE70009DC02938AFBF5F78854076ACA3BFF80D16C1714D1B40DD523C40793C353F1AF04E409591EB3F8BEA54C0"> : tensor<20x20xf32>}> : () -> tensor<20x20xf32>
    "func.return"(%1) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xi1>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<true> : tensor<20x20xi1>}> : () -> tensor<20x20xi1>
    "func.return"(%0) : (tensor<20x20xi1>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

