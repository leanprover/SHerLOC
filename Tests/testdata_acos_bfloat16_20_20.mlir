"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<20x20xbf16>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %2 = "func.call"() <{callee = @inputs}> : () -> tensor<20x20xbf16>
    %3 = "func.call"() <{callee = @expected}> : () -> tensor<20x20xbf16>
    %4 = "stablehlo.constant"() <{value = dense<-1.000000e+00> : tensor<bf16>}> : () -> tensor<bf16>
    %5 = "stablehlo.broadcast_in_dim"(%4) <{broadcast_dimensions = array<i64>}> : (tensor<bf16>) -> tensor<20x20xbf16>
    %6 = "stablehlo.compare"(%2, %5) <{compare_type = #stablehlo<comparison_type FLOAT>, comparison_direction = #stablehlo<comparison_direction NE>}> : (tensor<20x20xbf16>, tensor<20x20xbf16>) -> tensor<20x20xi1>
    %7 = "stablehlo.multiply"(%2, %2) : (tensor<20x20xbf16>, tensor<20x20xbf16>) -> tensor<20x20xbf16>
    %8 = "stablehlo.constant"() <{value = dense<1.000000e+00> : tensor<bf16>}> : () -> tensor<bf16>
    %9 = "stablehlo.broadcast_in_dim"(%8) <{broadcast_dimensions = array<i64>}> : (tensor<bf16>) -> tensor<20x20xbf16>
    %10 = "stablehlo.subtract"(%9, %7) : (tensor<20x20xbf16>, tensor<20x20xbf16>) -> tensor<20x20xbf16>
    %11 = "stablehlo.sqrt"(%10) : (tensor<20x20xbf16>) -> tensor<20x20xbf16>
    %12 = "stablehlo.constant"() <{value = dense<1.000000e+00> : tensor<bf16>}> : () -> tensor<bf16>
    %13 = "stablehlo.broadcast_in_dim"(%12) <{broadcast_dimensions = array<i64>}> : (tensor<bf16>) -> tensor<20x20xbf16>
    %14 = "stablehlo.add"(%13, %2) : (tensor<20x20xbf16>, tensor<20x20xbf16>) -> tensor<20x20xbf16>
    %15 = "stablehlo.atan2"(%11, %14) : (tensor<20x20xbf16>, tensor<20x20xbf16>) -> tensor<20x20xbf16>
    %16 = "stablehlo.constant"() <{value = dense<2.000000e+00> : tensor<bf16>}> : () -> tensor<bf16>
    %17 = "stablehlo.broadcast_in_dim"(%16) <{broadcast_dimensions = array<i64>}> : (tensor<bf16>) -> tensor<20x20xbf16>
    %18 = "stablehlo.multiply"(%17, %15) : (tensor<20x20xbf16>, tensor<20x20xbf16>) -> tensor<20x20xbf16>
    %19 = "stablehlo.constant"() <{value = dense<3.140630e+00> : tensor<bf16>}> : () -> tensor<bf16>
    %20 = "stablehlo.broadcast_in_dim"(%19) <{broadcast_dimensions = array<i64>}> : (tensor<bf16>) -> tensor<20x20xbf16>
    %21 = "stablehlo.select"(%6, %18, %20) : (tensor<20x20xi1>, tensor<20x20xbf16>, tensor<20x20xbf16>) -> tensor<20x20xbf16>
    "stablehlo.custom_call"(%21, %3) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<20x20xbf16>, tensor<20x20xbf16>) -> ()
    "func.return"(%21) : (tensor<20x20xbf16>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xbf16>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xbf16>}> : () -> tensor<20x20xbf16>
    "func.return"(%1) : (tensor<20x20xbf16>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xbf16>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xbf16>}> : () -> tensor<20x20xbf16>
    "func.return"(%0) : (tensor<20x20xbf16>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

