"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %3:2 = "func.call"() <{callee = @inputs}> : () -> (tensor<20x20xf32>, tensor<1x20xf32>)
    %4 = "func.call"() <{callee = @expected}> : () -> tensor<20x20xf32>
    %5 = "stablehlo.broadcast_in_dim"(%3#1) <{broadcast_dimensions = array<i64: 0, 1>}> : (tensor<1x20xf32>) -> tensor<20x20xf32>
    %6 = "stablehlo.maximum"(%3#0, %5) : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xf32>
    "stablehlo.custom_call"(%6, %4) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> ()
    "func.return"(%6) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> (tensor<20x20xf32>, tensor<1x20xf32>), res_attrs = [{mhlo.layout_mode = "default"}, {mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0xCF958A3FBF132EC0EA4782C0414ABA409375B740B071DDBE0A57423F0CD1C1BF0A5EBE40D6984FC0752DBC3F86A28F40C7609040F0570440726FCF403D97A640CE2FCFBFDE1FACBE44D31C40FABD3BC196CDF4BFA0E8A7C0B0B9863CABD9EDBF6F94BC402C444540712AC33FB982E34089A45FBF9A3699BED6C38440DA9B70C0FB41C0BF31998EBF5C14503FCB435CBFFFED25BF2FBB13BE3075524055097CBEF5059F3FE97F843E80883EBF34F986C0792BBB3E166F883FA38257C0627A723FE09CEDBF3B33C6BF7BA88ABFBABEC1406B872940FC8EBC406FC1AEBFCF816440A5A9A140DDA88E3FFE64E03F39F1173F9C6A433FA536FB3FE048CDBE2DBB2ABEACD7B4BE7F257F4039A7A2BFE3655FC0AC829040F03433C046C0BEC09300A93F21CBC0409C371F3F2588C53FB72D1E3EE8BC31C026406340CB543F3FD2F3FB3F369CED3E30E5EAC0BC5131401E18F7BFAC4691C0E356394068676E40F98D1B4091BAA9403A37B8BF281B4FC0D93BA5BF45A696407B079C3F05B505C0E14EF9BF368AB6BE5D647DBFD99BBE40E5A88EBEA4228C40EA6D92BE9A7C7440FEBB143F4A82B540C4C861C00B6B903F1A402040C8DBDABF962DF9BF1A0C723F47CF1240F0D50E4073459540C0AEDD402566A540CE7639C0C4E7FABD6108C840159BB7BF9BFDDDBFF76D933F8BB3A2BEA7CB1A4007334EC0C5D4B0BF5FD69640085BB7BF58CB96408FD92F3F83A10DC0048DD8BF66ADE4BECD05BD3FD8F49F3F77CC1840247695C08F05CCC0DB6C63C01233B640224117C0B1A48B3E895383C01B3DB04059050AC032DF963EEBA7ADBFC23370C0DCA211C0F753114064CFC140717DC23EB8867A40AA7B95BF3DBE19405EFF83C07EBD6CC045B033BF52AD64C0FA6BDB3F54B72FBEB1081DC06B2096C03ADD1CC0F75DBCBF0E4B5ABF09B0C73C54C172404B6C4E3F3C0BD4BF736164BFDDFADD4066C10E3F46CE9DC0D44C12400C037ABFD16F9BBF3A0A1341C57A883F38DB5AC06F36FE3FCC6A14C0DAF487BFF87D143F65F573BF84C03A3F60774CBEE6C13CC0AFF7923FAFB8AF3E178AF33F478355C044AA2640772E9ABF713D6CBF230A36C06A7B91C0DC0CF03DEE21DC3F17008AC003BBA8BFAF1C8A40A2C662C0649425C0E3E5234076FAEDC06DCD97BD3ACFF73EB8AA953EB7F060BF934654401EDB75BF19C595C00A12D13F7C0FA9BFF7C3503FF2BC5DBFA0EA8BBF8EDC81BF3856A53F5E0A8640B5746C3F21784D4001B29F3F83BA1F40A97F11C064C0ADBFB335FFBEDC13FDBFA56B4AC0B1DAC2C0964E3640AE24C53F93C62540E3C884C0E229244060B69140CFE84FC02D3CF3BFCF2F8ABFDA1226C0F30457BF49940A40C1A4AABF92954BBF8EE6D2BF2D9C11C0116B8940A4C8FA3F7DFF55BF196889BFD2B3BA3FA2AA29BF33A75EC009FA86C03F6EC63E21D3CA3F83FB563E39CEE23EB264DF3FAF53DB3FD4B48940613744BFDB5C35BE8FD04E4093EE49C0EED8B0BF8D4AC440CDAF14403CF631C06DCF1A4097B079BFC1D581C0AADC57C09E04C53F959BE73FE8E0343FD68717C0BE9B2C407F5C0641FF892A403273D1BF1AE37FC033CCAE3D73CB3540C2CD41C01658CE40C22197BF6EF039C0A2669340779158C01787B73FD02781BD515D6140BC6A73BFFA5E56BF3653303FF26459C06F6A95BF64BE9CC0686F4AC04673BDBEAFDA17BF41D55F3F493504409A42C23F345B703F1CCD1140B8DC7BC03CF81AC0D474793F6CDE06C0460FB4C09A4781C0BA6BCE409A026FBFB00410C0E3D25DBF8CCCB9BF54AAB4BF3AA3D93F7DB8F9BF237C393FDA997640DE38513F413611C095E44AC04076AFBFB8AED03F9E58B440DC1145BF918F6BBFC70895C0DC4FBCBE3C7A04BF251F3040495EFB3F16DEBFBF7D064140DF6A7D40568FF4BE0220BFC0C54ABFBF793659C09973DD3F78CFDF408BC795BFCBC5DDC0B808B440383CABC0AEB9E13F685384C0EC9EC1C0E448B140B7F2DEBF55F42BC023AC6D3DC91A3A40BB4FA440ADE058BE22E24FC07EBF13410BAFADC0D6B82B40EA2C3EC0062D6FC0B00D05C05A523AC0E9D9B5BFFEF5D3BF2EB8E73EF6EBEDBF048194BE849E43C0C38889402FEBFFC02620A04019FA4F40ACCEC5BFFF53DDC0A774DBBEB3D8C1BEB6CE61BE148201406CF5A9C08A988D3E952132BFEED90FC0D1C84140937B26402E412ABF4F615D40E5B7B03F6DAB51C0E232DCBE5344F1BEAFF90E3FD94D75C0155490C02235B2C0"> : tensor<20x20xf32>}> : () -> tensor<20x20xf32>
    %2 = "stablehlo.constant"() <{value = dense<[[2.45343208, -1.71341515, 4.59438276, -0.474218756, 2.69273567, 1.138219, 0.00682358351, 4.7777586, -5.77090454, -4.39520168, 2.86339211, -1.14880764, -0.633703828, 5.58479929, -3.40378356, -0.357113689, -3.7951622, -6.10719252, 2.76328516, -5.7721591]]> : tensor<1x20xf32>}> : () -> tensor<1x20xf32>
    "func.return"(%1, %2) : (tensor<20x20xf32>, tensor<1x20xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xf32>}> : () -> tensor<20x20xf32>
    "func.return"(%0) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

