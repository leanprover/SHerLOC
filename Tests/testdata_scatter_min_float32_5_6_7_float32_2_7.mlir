"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<5x6x7xf32>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %3 = "stablehlo.constant"() <{value = dense<[[0, 1], [2, 3]]> : tensor<2x2xi64>}> : () -> tensor<2x2xi64>
    %4:2 = "func.call"() <{callee = @inputs}> : () -> (tensor<5x6x7xf32>, tensor<2x7xf32>)
    %5 = "func.call"() <{callee = @expected}> : () -> tensor<5x6x7xf32>
    %6 = "stablehlo.scatter"(%4#0, %3, %4#1) <{scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [1], inserted_window_dims = [0, 1], scatter_dims_to_operand_dims = [0, 1], index_vector_dim = 1>, unique_indices = true}> ({
    ^bb0(%arg0: tensor<f32>, %arg1: tensor<f32>):
      %7 = "stablehlo.minimum"(%arg0, %arg1) : (tensor<f32>, tensor<f32>) -> tensor<f32>
      "stablehlo.return"(%7) : (tensor<f32>) -> ()
    }) : (tensor<5x6x7xf32>, tensor<2x2xi64>, tensor<2x7xf32>) -> tensor<5x6x7xf32>
    "stablehlo.custom_call"(%6, %5) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<5x6x7xf32>, tensor<5x6x7xf32>) -> ()
    "func.return"(%6) : (tensor<5x6x7xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> (tensor<5x6x7xf32>, tensor<2x7xf32>), res_attrs = [{mhlo.layout_mode = "default"}, {mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0xtensor<5x6x7xf32>}> : () -> tensor<5x6x7xf32>
    %2 = "stablehlo.constant"() <{value = dense<[[1.65976751, 4.94201899, 5.738800e+00, 0.521806955, -2.28421974, 0.124574378, -1.6130079], [1.306080e+00, 0.00143443933, -4.23722839, 0.125810787, 0.963359057, 2.86269307, -0.668618798]]> : tensor<2x7xf32>}> : () -> tensor<2x7xf32>
    "func.return"(%1, %2) : (tensor<5x6x7xf32>, tensor<2x7xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<5x6x7xf32>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0xtensor<5x6x7xf32>}> : () -> tensor<5x6x7xf32>
    "func.return"(%0) : (tensor<5x6x7xf32>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

