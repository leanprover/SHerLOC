"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %3:2 = "func.call"() <{callee = @inputs}> : () -> (tensor<20x20xf32>, tensor<1x20xf32>)
    %4 = "func.call"() <{callee = @expected}> : () -> tensor<20x20xf32>
    %5 = "stablehlo.broadcast_in_dim"(%3#1) <{broadcast_dimensions = array<i64: 0, 1>}> : (tensor<1x20xf32>) -> tensor<20x20xf32>
    %6 = "stablehlo.subtract"(%3#0, %5) : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xf32>
    "stablehlo.custom_call"(%6, %4) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> ()
    "func.return"(%6) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> (tensor<20x20xf32>, tensor<1x20xf32>), res_attrs = [{mhlo.layout_mode = "default"}, {mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xf32>}> : () -> tensor<20x20xf32>
    %2 = "stablehlo.constant"() <{value = dense<[[-0.370302677, 5.47239923, -0.623100519, -2.345783, 5.09209824, 2.43723726, -1.24062657, 6.36053324, 1.21303213, -0.114138119, 7.13908052, 2.34094715, -5.64296436, 5.38564396, -1.51352215, -0.191716373, -0.485118151, 1.86591887, -0.608985186, -0.69162321]]> : tensor<1x20xf32>}> : () -> tensor<1x20xf32>
    "func.return"(%1, %2) : (tensor<20x20xf32>, tensor<1x20xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0x2DDDC7C0043514C1AA3D82BFC45717BF189111C1D0CD05401E2DD43F040FCFC03F93ADC0E7D4A93FE11E73C04A0ED3BF79967540120A29C09C02E540AD428D40927AC63FE46792C0004A4CBD16CA10400237EC3FC22E1DC1B4333BBF5BD9404010043FBF063DD3C0A2031840BD1605C13D52BA3FE0443FBF563D73C08C5C8BC0C338D140D00F8F3F95F11A409A9FE8BF7297B43FF594F2BF8837E4BEB506B33FA0CDEE3F707E04C1F2DB1F40B043633EE761D6C0009BB53C280EB03E5F9048C0ABEBF03F4CA89B3FB86F36BF10C0083FC4C48A40DFBD1CC114FB73400E3C794000B7FE3E048813BF8077073EB4D64FBF17EA183F882F09C102D3224096A5B0C0E98A84C0822B9C4052142B4016EB22C1D0A8D63E94DDC5BF3EBCBFC0F8BD8CBE244EA7BF7EA0C5C0E24E51C0FADF0DBF02863740BF6A09C0ABB10DC0541BCBBFFC82D2BF1F39D1C0F611423E5085CBBF0D3CE7C02746BFBFA651BABF45CC5DC0C1F3C0BFF69F8EC0042AAAC0461CA03F90B1D5402C9506C16006173DC452293F96C6E2C08C7F024088A5C54034D766C0588DE33E213582C0C4FEBFBFDA03873F54F6F0C0AA648AC00A00B5400C5AD7BF2F1DC2BF5FC7E7BF685293C06E7661BF8787F5408CF792BF7E57124008F9B5C070EEEDBFF0B53E3F4239814012F98EC0DC06893F3D19C9C024727E3E78C19B3E0A4E36C0B359CCBF304C4BBF9CD1C1C0076081C07C807EBFADACA0C0707CB0C028B9BF40E53D9EC0647B83BE3E7785BF23B8C93F2AE9FFC01DBDFC3F826E16C0C95917BF5DE4C7C0710B48C010F11CBEB4C096BF22BB2340AC8490C02C6E23C1F99B90C0A62F8BC0721946C0D733D2BFCF918040CF6DEEC080DB9EBEC5377AC00C2777BFF8638F3E0ABF2D40240A6B3E1F77A83E9443CBC018A40C3EA6A5EA40139E19C01A04C3BFAC840541D27691C036FE6C4079DA8BBD426418C0D3AE6DC0E1E80D41583526C19C5C5D4042B60EC0C2B0EDBF7E57B9BF77F566C0548EA0BE084E2440105E85C0C58E97BFD8500FBF154A0FC1448DCDC0FC3D9A3F4EEB1BC1CE7B4EC0DAF82F3F3B2279C0DA083A400E713F404561A2C0DB4AE540B53DFB3DEC11C03F239705C0A4B80140E130BB3E057E37C0565294C03A16B0BE4C54A5BFC79CA7C07C996FBF425E264072DE6CC0146C69C0FA46DFBFA7ACE5C0809E62BEFA10DC40104492C04CA94340ECFEB5C035BF2740822013BFAA507240477F3B409936B8408F8326C1516DA33F73FE84409045DDBE10AFB2C0E4AA68400B7D86C0281843C0071DA43F607B9BC0C0B41ABD316426402E5AE9C042415B40C15C0BC0C9F159C00CC000C035DF1B3F624A58C04A251FC06D5772C0EE7725BFC4D132BF032FA1C0E43208C04E3DDA3FCDC7A3C00DE98C4052C073BFCE219FC0CC533CC094B48F40F5E911C1479C114118BB4D409A3F4C3FC48816C0B0948F408EDE033F745001403F9ABBC05CEC44BFE8AC883E040481BF0997C3C08307A43F2B8DE9C0426D8AC00FC18DC0136BE8C0D4BBFEBF188D46BF21F8B2C0412A8C3F3A349A3F41BF0140D0C053BF045854C0D335AAC0CAC6F13FB40322C020DFC73F302526406420B5C02D168EC0FC3EAF3FC22790C08CD8A0BE8770B0BE3E34D7C0C8E69D3FBAB77440514912C0C48F3E40BACDA3BF9D5D2340001482BCCED6B5C0A7BA433F861E92BE7E0123C06B1A5340B9C80BC04394ABC02BDC15C08847AEC038C137C1B88DE1BF86C9243EB2F2C9C0E839163F5838794092BB49C0260AA9BF94079ABFA5EB2D40B59B8EBF429BC540ECF70E4096EB1C3E4662A6C0E6772C3FA85CBD3F963994BF0CA6273FCDA053C003277BC021E58FBF01E8ECBF1DBD61C083551FC03AD12F4168D3E9C0172C0140A77B80402D576E3F321D33BF60D6DFBFA266AD4038A5983E6E61A8C03842DBC04020643FCF53A5C0B016D13F82794940393302C1825B5A3F212699BF642CE3BF3A0F0EC07DB7BD40F7E29FC0B6D511410043CD3F6A7F6540F65536C000ACF93EEC975E3FF8AD6F3DCE66F8C0D647F5C03D8F8440AE714CC020176E408F3EFB3FB1CD16C1490F4DBF7D678140B4D3A5C0824F04C1990A2941A18887C0ECA60EBFB1495F409468873F9828683F2C69C1BF0206AF3F4CD3E33EAC6908C1EA9A793E18588B40C2F72BC1E82F9BBF344073BF3F9210C164E53240A5D6963F8583AAC0DA9C9CC0E03BFA40F026FAC0DC645D405F761FC0086CBB3E7E6696BFDC1590BF2A82A13F"> : tensor<20x20xf32>}> : () -> tensor<20x20xf32>
    "func.return"(%0) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

