"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<20x20xui16>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %2 = "func.call"() <{callee = @inputs}> : () -> tensor<20x20xui16>
    %3 = "func.call"() <{callee = @expected}> : () -> tensor<20x20xui16>
    %4 = "stablehlo.constant"() <{value = dense<0> : tensor<ui16>}> : () -> tensor<ui16>
    %5 = "stablehlo.broadcast_in_dim"(%4) <{broadcast_dimensions = array<i64>}> : (tensor<ui16>) -> tensor<20x20xui16>
    %6 = "stablehlo.compare"(%2, %5) <{compare_type = #stablehlo<comparison_type UNSIGNED>, comparison_direction = #stablehlo<comparison_direction EQ>}> : (tensor<20x20xui16>, tensor<20x20xui16>) -> tensor<20x20xi1>
    %7 = "stablehlo.constant"() <{value = dense<0> : tensor<ui16>}> : () -> tensor<ui16>
    %8 = "stablehlo.broadcast_in_dim"(%7) <{broadcast_dimensions = array<i64>}> : (tensor<ui16>) -> tensor<20x20xui16>
    %9 = "stablehlo.constant"() <{value = dense<1> : tensor<ui16>}> : () -> tensor<ui16>
    %10 = "stablehlo.broadcast_in_dim"(%9) <{broadcast_dimensions = array<i64>}> : (tensor<ui16>) -> tensor<20x20xui16>
    %11 = "stablehlo.select"(%6, %8, %10) : (tensor<20x20xi1>, tensor<20x20xui16>, tensor<20x20xui16>) -> tensor<20x20xui16>
    "stablehlo.custom_call"(%11, %3) <{call_target_name = "check.expect_eq", has_side_effect = true}> : (tensor<20x20xui16>, tensor<20x20xui16>) -> ()
    "func.return"(%11) : (tensor<20x20xui16>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xui16>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xui16>}> : () -> tensor<20x20xui16>
    "func.return"(%1) : (tensor<20x20xui16>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xui16>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xui16>}> : () -> tensor<20x20xui16>
    "func.return"(%0) : (tensor<20x20xui16>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

