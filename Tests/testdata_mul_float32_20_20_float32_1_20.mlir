"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %3:2 = "func.call"() <{callee = @inputs}> : () -> (tensor<20x20xf32>, tensor<1x20xf32>)
    %4 = "func.call"() <{callee = @expected}> : () -> tensor<20x20xf32>
    %5 = "stablehlo.broadcast_in_dim"(%3#1) <{broadcast_dimensions = array<i64: 0, 1>}> : (tensor<1x20xf32>) -> tensor<20x20xf32>
    %6 = "stablehlo.multiply"(%3#0, %5) : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xf32>
    "stablehlo.custom_call"(%6, %4) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> ()
    "func.return"(%6) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> (tensor<20x20xf32>, tensor<1x20xf32>), res_attrs = [{mhlo.layout_mode = "default"}, {mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xf32>}> : () -> tensor<20x20xf32>
    %2 = "stablehlo.constant"() <{value = dense<[[0.651655078, -5.39799786, 1.90161359, -0.145493269, 2.73951817, 5.649080e+00, -0.829076707, -2.49241328, -4.88056612, -3.85774946, -3.16361904, 4.79692364, 0.97927159, 0.584053695, 2.23244119, -3.43535352, 3.98992825, 1.40671241, -1.8466115, 1.29623652]]> : tensor<1x20xf32>}> : () -> tensor<1x20xf32>
    "func.return"(%1, %2) : (tensor<20x20xf32>, tensor<1x20xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xf32>}> : () -> tensor<20x20xf32>
    "func.return"(%0) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

