"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<8x9xcomplex<f32>>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %6 = "func.call"() <{callee = @inputs}> : () -> tensor<8x9xcomplex<f32>>
    %7 = "func.call"() <{callee = @expected}> : () -> tensor<8x9xcomplex<f32>>
    %8 = "func.call"(%6) <{callee = @cumsum}> : (tensor<8x9xcomplex<f32>>) -> tensor<8x9xcomplex<f32>>
    "stablehlo.custom_call"(%8, %7) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<8x9xcomplex<f32>>, tensor<8x9xcomplex<f32>>) -> ()
    "func.return"(%8) : (tensor<8x9xcomplex<f32>>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<8x9xcomplex<f32>>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %5 = "stablehlo.constant"() <{value = dense<[[(1.5987395,0.541286051), (-6.54630613,-0.619641482), (-3.84879065,-0.0677065104), (1.86761451,-0.451561719), (2.2611742,3.46814275), (-2.85360646,-1.44291711), (1.91231227,5.81824207), (-3.12145877,-1.16719353), (4.53036404,0.604800224)], [(-1.52837121,0.193714485), (-3.22401547,0.500711381), (-2.6315093,4.25164747), (8.77459144,5.45615816), (-2.36628485,4.78459215), (4.794631,-2.17301822), (-3.94169664,3.36308098), (-5.64808464,1.63521242), (-2.02305174,2.05725789)], [(3.07215977,-0.753153264), (-2.01873732,-5.77588653), (0.0904472917,1.41015327), (4.407022,3.45601606), (0.584228456,-5.8690443), (4.3725543,-4.40223694), (0.371268064,-2.26736641), (1.62523115,-2.62082696), (-1.05325186,0.144867599)], [(-0.55911696,-1.01641345), (3.60382628,-1.06943727), (1.85559249,2.06671882), (-5.6459527,-0.653148829), (4.95000887,1.82566619), (3.39078116,-1.26320279), (-0.438342363,-2.18234444), (3.04762697,1.64005291), (-0.393939912,3.51738048)], [(-4.24681711,-2.622226), (-2.96784306,3.59905243), (1.84440351,2.2943027), (-6.4471221,2.26997328), (-7.70298194,-0.507447064), (-2.61639476,3.94585919), (-0.447108686,-1.03747141), (-2.14353895,1.28331304), (0.276445776,-1.56109989)], [(0.852175593,-0.591766417), (-0.976981341,-4.0109849), (-0.342970669,-1.8473947), (0.665257692,1.25878108), (-2.493850e+00,-3.15208054), (-1.26427424,-4.89165545), (-3.7092073,0.293551713), (-1.96681011,1.02029347), (1.96159434,3.17414212)], [(-0.103672445,4.38514948), (1.48800433,0.771888613), (-0.762191712,0.446685374), (3.51905751,1.51587081), (4.90583611,-5.06194496), (5.66200876,-4.58499193), (2.5680697,-1.23295927), (-1.21432686,-1.77025914), (-0.30629763,3.58130312)], [(-0.382366478,-8.947270e-01), (3.46942449,2.18303823), (3.21751547,-3.84484959), (-5.24563646,2.54456544), (2.21942091,2.53604484), (-0.749014437,0.985524356), (0.0388806611,6.64195681), (5.21082306,1.17546356), (2.64055037,-3.306777)]]> : tensor<8x9xcomplex<f32>>}> : () -> tensor<8x9xcomplex<f32>>
    "func.return"(%5) : (tensor<8x9xcomplex<f32>>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<8x9xcomplex<f32>>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %4 = "stablehlo.constant"() <{value = dense<[[(1.5987395,0.541286051), (-6.54630613,-0.619641482), (-3.84879065,-0.0677065104), (1.86761451,-0.451561719), (2.2611742,3.46814275), (-2.85360646,-1.44291711), (1.91231227,5.81824207), (-3.12145877,-1.16719353), (4.53036404,0.604800224)], [(0.0703682899,0.73500055), (-9.77032184,-0.118930101), (-6.48029994,4.18394089), (10.6422062,5.00459623), (-0.105110645,8.25273514), (1.94102454,-3.61593533), (-2.02938437,9.18132305), (-8.76954364,0.468018889), (2.5073123,2.66205812)], [(3.14252806,-0.0181527138), (-11.7890587,-5.8948164), (-6.38985252,5.59409428), (15.0492287,8.46061229), (0.479117811,2.38369083), (6.3135786,-8.01817226), (-1.65811634,6.91395664), (-7.14431238,-2.15280819), (1.45406044,2.80692577)], [(2.58341122,-1.03456616), (-8.18523216,-6.96425342), (-4.534260e+00,7.66081333), (9.40327644,7.80746364), (5.42912674,4.20935726), (9.704360e+00,-9.28137493), (-2.09645867,4.73161221), (-4.09668541,-0.512755275), (1.06012058,6.32430649)], [(-1.6634059,-3.65679216), (-11.1530752,-3.365201), (-2.68985629,9.95511627), (2.95615435,10.0774364), (-2.27385521,3.70191026), (7.08796501,-5.33551598), (-2.54356742,3.69414091), (-6.24022436,0.770557761), (1.33656633,4.76320648)], [(-0.811230301,-4.24855852), (-12.1300564,-7.37618589), (-3.0328269,8.10772132), (3.62141204,11.3362179), (-4.76770496,0.549829721), (5.82369089,-10.2271709), (-6.25277472,3.98769259), (-8.20703411,1.79085124), (3.29816055,7.93734836)], [(-0.914902746,0.136590958), (-10.6420517,-6.60429716), (-3.79501867,8.55440711), (7.14046955,12.8520889), (0.138131142,-4.51211548), (1.148570e+01,-14.8121624), (-3.68470502,2.75473332), (-9.42136096,0.0205920935), (2.99186301,11.518652)], [(-1.29726923,-0.758136034), (-7.17262744,-4.42125893), (-0.577503204,4.70955753), (1.89483309,15.3966541), (2.35755205,-1.97607064), (10.7366848,-13.8266382), (-3.64582443,9.396690e+00), (-4.21053791,1.19605565), (5.63241339,8.21187496)]]> : tensor<8x9xcomplex<f32>>}> : () -> tensor<8x9xcomplex<f32>>
    "func.return"(%4) : (tensor<8x9xcomplex<f32>>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = (tensor<8x9xcomplex<f32>>) -> tensor<8x9xcomplex<f32>>, sym_name = "cumsum", sym_visibility = "private"}> ({
  ^bb0(%arg0: tensor<8x9xcomplex<f32>>):
    %0 = "stablehlo.constant"() <{value = dense<(0.000000e+00,0.000000e+00)> : tensor<complex<f32>>}> : () -> tensor<complex<f32>>
    %1 = "stablehlo.broadcast_in_dim"(%0) <{broadcast_dimensions = array<i64>}> : (tensor<complex<f32>>) -> tensor<complex<f32>>
    %2 = "stablehlo.reduce_window"(%arg0, %1) <{padding = dense<[[7, 0], [0, 0]]> : tensor<2x2xi64>, window_dimensions = array<i64: 8, 1>}> ({
    ^bb0(%arg1: tensor<complex<f32>>, %arg2: tensor<complex<f32>>):
      %3 = "stablehlo.add"(%arg1, %arg2) : (tensor<complex<f32>>, tensor<complex<f32>>) -> tensor<complex<f32>>
      "stablehlo.return"(%3) : (tensor<complex<f32>>) -> ()
    }) : (tensor<8x9xcomplex<f32>>, tensor<complex<f32>>) -> tensor<8x9xcomplex<f32>>
    "func.return"(%2) : (tensor<8x9xcomplex<f32>>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

