"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<20x20xi32>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %3:2 = "func.call"() <{callee = @inputs}> : () -> (tensor<20x20xi32>, tensor<1x20xi32>)
    %4 = "func.call"() <{callee = @expected}> : () -> tensor<20x20xi32>
    %5 = "stablehlo.broadcast_in_dim"(%3#1) <{broadcast_dimensions = array<i64: 0, 1>}> : (tensor<1x20xi32>) -> tensor<20x20xi32>
    %6 = "stablehlo.shift_right_arithmetic"(%3#0, %5) : (tensor<20x20xi32>, tensor<20x20xi32>) -> tensor<20x20xi32>
    "stablehlo.custom_call"(%6, %4) <{call_target_name = "check.expect_eq", has_side_effect = true}> : (tensor<20x20xi32>, tensor<20x20xi32>) -> ()
    "func.return"(%6) : (tensor<20x20xi32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> (tensor<20x20xi32>, tensor<1x20xi32>), res_attrs = [{mhlo.layout_mode = "default"}, {mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xi32>}> : () -> tensor<20x20xi32>
    %2 = "stablehlo.constant"() <{value = dense<[[1, 0, 5, -3, 1, -3, 0, 0, 1, 0, 4, 4, 0, -2, 0, -4, 3, 2, 2, -1]]> : tensor<1x20xi32>}> : () -> tensor<1x20xi32>
    "func.return"(%1, %2) : (tensor<20x20xi32>, tensor<1x20xi32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xi32>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0xFFFFFFFF0100000000000000FFFFFFFF01000000FFFFFFFF00000000000000000100000000000000000000000000000007000000FFFFFFFF010000000000000000000000FFFFFFFF00000000FFFFFFFF0100000002000000FFFFFFFF000000000000000000000000020000000000000002000000FFFFFFFFFFFFFFFF00000000FEFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000FFFFFFFF000000000000000002000000FFFFFFFF00000000FFFFFFFFFFFFFFFFFEFFFFFFFBFFFFFFFFFFFFFFFFFFFFFF000000000000000004000000FFFFFFFF040000000000000000000000FFFFFFFF0000000000000000FFFFFFFF00000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFF03000000FFFFFFFFF9FFFFFF00000000FFFFFFFF0000000000000000000000000100000002000000FFFFFFFF0000000001000000FFFFFFFF04000000FDFFFFFF00000000FFFFFFFFFFFFFFFF00000000030000000000000000000000FFFFFFFF000000000100000000000000FFFFFFFF02000000FEFFFFFFFFFFFFFF0000000000000000FFFFFFFFFEFFFFFF00000000FEFFFFFFFCFFFFFF0000000000000000060000000000000000000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFFFFFFFFFF02000000FFFFFFFF0000000001000000FFFFFFFF04000000FAFFFFFF00000000FEFFFFFF0000000000000000000000000000000000000000FFFFFFFF0000000001000000FFFFFFFFFFFFFFFF010000000000000000000000FFFFFFFF00000000FFFFFFFFFFFFFFFF0000000000000000FDFFFFFF000000000000000001000000FFFFFFFF04000000FFFFFFFF000000000000000000000000FFFFFFFF01000000020000000000000000000000FFFFFFFF000000000200000001000000FEFFFFFF0000000000000000FFFFFFFF04000000FFFFFFFFFEFFFFFFFFFFFFFF00000000FFFFFFFF00000000FFFFFFFF0000000000000000FFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFBFFFFFF010000000200000002000000FFFFFFFF00000000FDFFFFFF0000000000000000FFFFFFFF000000000000000000000000000000000100000004000000FFFFFFFF0000000001000000FFFFFFFF03000000010000000200000001000000000000000000000001000000FFFFFFFF0100000000000000FFFFFFFF0000000001000000000000000300000000000000FFFFFFFFFFFFFFFF01000000FFFFFFFF03000000FDFFFFFFFEFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFF000000000000000000000000FFFFFFFF00000000000000000000000000000000FEFFFFFFFFFFFFFF00000000020000000100000004000000000000000000000005000000FFFFFFFFFBFFFFFF00000000FFFFFFFF0000000000000000000000000000000000000000000000000000000001000000000000000100000002000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFF000000000000000000000000FFFFFFFF0000000000000000FFFFFFFFFFFFFFFF02000000000000000000000002000000FFFFFFFF00000000FCFFFFFF000000000000000000000000FFFFFFFF0400000000000000FFFFFFFF00000000FFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFF00000000030000000000000001000000FFFFFFFF00000000FFFFFFFF00000000FAFFFFFF00000000FFFFFFFF01000000FFFFFFFF00000000FDFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFF00000000FFFFFFFF000000000000000000000000FDFFFFFF00000000FBFFFFFF000000000000000000000000FFFFFFFF000000000000000001000000FFFFFFFF00000000010000000000000002000000FFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFF0000000000000000000000000600000000000000000000000000000000000000FFFFFFFF000000000000000000000000FFFFFFFFFDFFFFFF000000000000000000000000FFFFFFFF00000000FFFFFFFFFFFFFFFF0200000000000000FAFFFFFF000000000000000000000000000000000000000001000000FCFFFFFF00000000000000000100000000000000FBFFFFFFFFFFFFFF00000000FCFFFFFF00000000FFFFFFFF0200000000000000FCFFFFFF0000000000000000FFFFFFFFFFFFFFFF00000000"> : tensor<20x20xi32>}> : () -> tensor<20x20xi32>
    "func.return"(%0) : (tensor<20x20xi32>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

