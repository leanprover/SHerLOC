"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<20x20xcomplex<f32>>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %3:2 = "func.call"() <{callee = @inputs}> : () -> (tensor<1x20xcomplex<f32>>, tensor<20x20xcomplex<f32>>)
    %4 = "func.call"() <{callee = @expected}> : () -> tensor<20x20xcomplex<f32>>
    %5 = "stablehlo.broadcast_in_dim"(%3#0) <{broadcast_dimensions = array<i64: 0, 1>}> : (tensor<1x20xcomplex<f32>>) -> tensor<20x20xcomplex<f32>>
    %6 = "stablehlo.real"(%5) : (tensor<20x20xcomplex<f32>>) -> tensor<20x20xf32>
    %7 = "stablehlo.real"(%3#1) : (tensor<20x20xcomplex<f32>>) -> tensor<20x20xf32>
    %8 = "stablehlo.compare"(%6, %7) <{compare_type = #stablehlo<comparison_type FLOAT>, comparison_direction = #stablehlo<comparison_direction EQ>}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xi1>
    %9 = "stablehlo.compare"(%6, %7) <{compare_type = #stablehlo<comparison_type FLOAT>, comparison_direction = #stablehlo<comparison_direction GT>}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xi1>
    %10 = "stablehlo.imag"(%5) : (tensor<20x20xcomplex<f32>>) -> tensor<20x20xf32>
    %11 = "stablehlo.imag"(%3#1) : (tensor<20x20xcomplex<f32>>) -> tensor<20x20xf32>
    %12 = "stablehlo.compare"(%10, %11) <{compare_type = #stablehlo<comparison_type FLOAT>, comparison_direction = #stablehlo<comparison_direction GT>}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xi1>
    %13 = "stablehlo.select"(%8, %12, %9) : (tensor<20x20xi1>, tensor<20x20xi1>, tensor<20x20xi1>) -> tensor<20x20xi1>
    %14 = "stablehlo.select"(%13, %5, %3#1) : (tensor<20x20xi1>, tensor<20x20xcomplex<f32>>, tensor<20x20xcomplex<f32>>) -> tensor<20x20xcomplex<f32>>
    "stablehlo.custom_call"(%14, %4) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<20x20xcomplex<f32>>, tensor<20x20xcomplex<f32>>) -> ()
    "func.return"(%14) : (tensor<20x20xcomplex<f32>>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> (tensor<1x20xcomplex<f32>>, tensor<20x20xcomplex<f32>>), res_attrs = [{mhlo.layout_mode = "default"}, {mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<[[(2.75172925,2.80566955), (1.14439309,-2.00675344), (1.98630846,-4.18331051), (-0.615556538,0.78611803), (-1.72994065,-2.1235075), (-0.355089486,2.21099901), (-5.89820623,-4.96711922), (-0.763514518,-1.23006177), (-0.977413594,-0.294808209), (-0.36447534,-0.18113713), (-3.22196198,-5.19534779), (-4.32434034,3.31774902), (-4.69203472,2.02342486), (1.64803779,-3.84772062), (2.5231123,-0.588702083), (3.24407792,3.40635681), (2.05905056,-2.52628112), (-3.58980513,-2.61433697), (0.957395493,-3.81603098), (2.68533325,-4.443645)]]> : tensor<1x20xcomplex<f32>>}> : () -> tensor<1x20xcomplex<f32>>
    %2 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xcomplex<f32>>}> : () -> tensor<20x20xcomplex<f32>>
    "func.return"(%1, %2) : (tensor<1x20xcomplex<f32>>, tensor<20x20xcomplex<f32>>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xcomplex<f32>>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xcomplex<f32>>}> : () -> tensor<20x20xcomplex<f32>>
    "func.return"(%0) : (tensor<20x20xcomplex<f32>>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

