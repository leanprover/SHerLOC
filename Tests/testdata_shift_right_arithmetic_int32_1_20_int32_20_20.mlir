"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<20x20xi32>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %3:2 = "func.call"() <{callee = @inputs}> : () -> (tensor<1x20xi32>, tensor<20x20xi32>)
    %4 = "func.call"() <{callee = @expected}> : () -> tensor<20x20xi32>
    %5 = "stablehlo.broadcast_in_dim"(%3#0) <{broadcast_dimensions = array<i64: 0, 1>}> : (tensor<1x20xi32>) -> tensor<20x20xi32>
    %6 = "stablehlo.shift_right_arithmetic"(%5, %3#1) : (tensor<20x20xi32>, tensor<20x20xi32>) -> tensor<20x20xi32>
    "stablehlo.custom_call"(%6, %4) <{call_target_name = "check.expect_eq", has_side_effect = true}> : (tensor<20x20xi32>, tensor<20x20xi32>) -> ()
    "func.return"(%6) : (tensor<20x20xi32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> (tensor<1x20xi32>, tensor<20x20xi32>), res_attrs = [{mhlo.layout_mode = "default"}, {mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<[[1, -1, 0, 1, -5, 2, -6, 0, 0, -1, -2, -2, -1, 0, -1, -3, 4, -3, -3, -1]]> : tensor<1x20xi32>}> : () -> tensor<1x20xi32>
    %2 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xi32>}> : () -> tensor<20x20xi32>
    "func.return"(%1, %2) : (tensor<1x20xi32>, tensor<20x20xi32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xi32>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0x00000000FFFFFFFF0000000000000000FDFFFFFF00000000FFFFFFFF0000000000000000FFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF01000000FFFFFFFFFFFFFFFFFFFFFFFF01000000FFFFFFFF0000000000000000FBFFFFFF00000000FFFFFFFF0000000000000000FFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFEFFFFFF04000000FFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000FEFFFFFF02000000FFFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000FEFFFFFFFDFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000FBFFFFFF00000000FFFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000FFFFFFFF02000000FEFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000FDFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000FEFFFFFF01000000FEFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFDFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000FFFFFFFF02000000FAFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000FDFFFFFF00000000FEFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFDFFFFFF00000000FDFFFFFFFFFFFFFFFFFFFFFF01000000FFFFFFFF0000000001000000FBFFFFFF00000000FDFFFFFF0000000000000000FFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFDFFFFFF02000000FDFFFFFFFFFFFFFFFFFFFFFF01000000FFFFFFFF0000000000000000FFFFFFFF01000000FFFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000FDFFFFFF00000000FFFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFEFFFFFF00000000FEFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000FBFFFFFF00000000FAFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000FDFFFFFFFEFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000FFFFFFFF02000000FAFFFFFF0000000000000000FFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000FDFFFFFFFDFFFFFFFFFFFFFF00000000FFFFFFFF0000000001000000FFFFFFFF02000000FAFFFFFF0000000000000000FFFFFFFFFEFFFFFFFEFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF04000000FFFFFFFFFEFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000FFFFFFFF00000000FFFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000FDFFFFFFFDFFFFFFFFFFFFFF01000000FFFFFFFF0000000000000000FBFFFFFF00000000FDFFFFFF0000000000000000FFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000FFFFFFFF02000000FFFFFFFF0000000000000000FFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFDFFFFFF04000000FFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000FDFFFFFF02000000FFFFFFFF0000000000000000FFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFDFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000FBFFFFFF00000000FDFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF02000000FDFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000FDFFFFFF01000000FEFFFFFF0000000000000000FFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000FDFFFFFFFFFFFFFFFFFFFFFF"> : tensor<20x20xi32>}> : () -> tensor<20x20xi32>
    "func.return"(%0) : (tensor<20x20xi32>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

