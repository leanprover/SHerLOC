"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %3:2 = "func.call"() <{callee = @inputs}> : () -> (tensor<1x20xf32>, tensor<20x20xf32>)
    %4 = "func.call"() <{callee = @expected}> : () -> tensor<20x20xf32>
    %5 = "stablehlo.broadcast_in_dim"(%3#0) <{broadcast_dimensions = array<i64: 0, 1>}> : (tensor<1x20xf32>) -> tensor<20x20xf32>
    %6 = "stablehlo.maximum"(%5, %3#1) : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xf32>
    "stablehlo.custom_call"(%6, %4) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> ()
    "func.return"(%6) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> (tensor<1x20xf32>, tensor<20x20xf32>), res_attrs = [{mhlo.layout_mode = "default"}, {mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<[[-2.50558591, 3.33518052, -3.30435514, -1.74195266, 1.48053682, 0.564161956, 0.0351434201, -0.52820009, -3.64032626, -4.3281827, 0.163584158, 0.117979258, 1.98972178, 5.67226696, -1.37462115, 5.30714369, 1.36005414, 0.978463768, -2.3208797, -2.92100811]]> : tensor<1x20xf32>}> : () -> tensor<1x20xf32>
    %2 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xf32>}> : () -> tensor<20x20xf32>
    "func.return"(%1, %2) : (tensor<1x20xf32>, tensor<20x20xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xf32>}> : () -> tensor<20x20xf32>
    "func.return"(%0) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

