"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %2 = "func.call"() <{callee = @inputs}> : () -> tensor<20x20xf32>
    %3 = "func.call"() <{callee = @expected}> : () -> tensor<20x20xf32>
    %4 = "stablehlo.negate"(%2) : (tensor<20x20xf32>) -> tensor<20x20xf32>
    %5 = "stablehlo.exponential"(%4) : (tensor<20x20xf32>) -> tensor<20x20xf32>
    %6 = "stablehlo.constant"() <{value = dense<1.000000e+00> : tensor<f32>}> : () -> tensor<f32>
    %7 = "stablehlo.broadcast_in_dim"(%6) <{broadcast_dimensions = array<i64>}> : (tensor<f32>) -> tensor<20x20xf32>
    %8 = "stablehlo.add"(%7, %5) : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xf32>
    %9 = "stablehlo.constant"() <{value = dense<1.000000e+00> : tensor<f32>}> : () -> tensor<f32>
    %10 = "stablehlo.broadcast_in_dim"(%9) <{broadcast_dimensions = array<i64>}> : (tensor<f32>) -> tensor<20x20xf32>
    %11 = "stablehlo.divide"(%10, %8) : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xf32>
    "stablehlo.custom_call"(%11, %3) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> ()
    "func.return"(%11) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0x2C64053F0BE2853CEF295C40EC70283F6F6812C0C732593E548CB2BF53C0AC4070E579C031AAA940F1432BBFB4E86840130DDCC0266466BFEDDD86C0C5CFD83F978DD5BF522D19C0CE9074401A5EFF3E872E8D40520C5EC0497E4F408FADBDC026DF53406985C13F25B3A0C03DE6983F70323D3FA64044C0091B1FC0184FF33E154AD9404D1A383FAB5F2DC0AEEEC13DC069FFBF93BC753F59119CBED01F6A3F090429C0244EB2BF06DE06C0989278400BBD18BF07D57BC0B2D431BF3CF532C0F4820BC0C2677640F0A1F73FF977C9C02F57754069AA25BFAD9F4D40A2DA3740E09E36408E3968BF0FDB3BBEEC27093FA53407BEF01D0A40995C40C006959A3FA71E1DC0D2BA55409EF48BBE0643A440D5E30BBB5EB493BF6330B3BE8AC78340F301534043BE933E24FBB43F3562A43E600A94BE7C5FBB3F4FE1DA3E84A6C5C0DEDB983FD7848A3F69342D3FC7FA3EC098048EC07A5854C0D2AFA4C0FB64C7C090A78E3FD2CF91C06935B73FA833BC408C52BF4038EFE1C0A556F3BFCC84564033BB0FC0E2D8E83F9B6188C0D41A7640D6C32CC01D3EA3C0D83602BF0E2E90C08FE4823ED0D224C0EF5B3D3F3AE01E412B823A3FC3F3BD40868144C0069F9E4000ABE7BF45DD4140BE7A3FC04D9F9CBF4FEB9CBF58BBF33F2CE73EC0ABBF2E3F21B253C0020385C09C73724090542DBFE4A91C40382E2E401307DA404AFD7B40CEA344C010A242BF5D0D6240594036C0B7EA73BF3FF7CEBF3B1C55C02FE324BFBC7A22BF4A7441C021D946C03AA68EC0C74AD1C03F5D023F9DD5033FEC9AE63F3F6B08C08C8CEABF393427C0A3069B40234FFDBF8EDB6F40CE31C13FB9D80AC0D1E553BF0D24C8BDA002E03E691AC5BF1E33FCBF40B49140F47117C05E90CDC02AB244402EEDB33F4E9295C0BD4ADE4025988BB86E81CD3F4C697F4093221FC01AD9C83F915FB4C0DE76BC3F50928640B49E3E4010BC71406494A7C06CA97FC05F92A0BA4034F0C0BD67D0404F984AC0F15244BF3BC368C0C02543C0831278BFD80C2BC020943B40A8F50740603BFD3F769361C0C0BDF73FD11002C09E6283BE7E6E30BE48ACC63FC4BCA73FB33B16416F546E40C2B21240C7ACB440090C8EC077F01E3EC8831140893DCF40DBF058C0C23A99C0D9EE043FD78B2FC0407CA5BE2291ABC05608CD3EE7B5CA40F2E26B3F3F27CD3EC236063FA55E4440726AEB3E49B90FC0FE660BC0A8AD83C02C0E8C3FCA81843FF24DAA3F69303ABE6A96A8BFCC0CC3BF2402A2BF79B6204048B6FBBD45A4E240016E59C05C1EA6C0518985BFBC974BC0241D35C08F4020408FC1964044C7344012532340152B8BBF74AD853FB171C73E77D21DC0BCB8BABF49C65E404B4946BFD861E13F276D2BC07FAB23C0AC0EE13F198F70BFE52D9BBFF335793FDDCFB9BE84D9CB40EE4EF83FDF3E8D4069C7C7C002CC76400416EF3F71D31FC0587F04402F67A6BF1E560ABFB7E80140FDEC47C0F34B6140231E8940929FDEBFEA78DEBFC1D5A8404FE82ABFEA8BACBFD88E333F7FABBEC0615FF9BFD353B13F733EA83F501E50402674BCBF00CEDEBFA087D43FEAB569BFBD5B683F769D4B3FCE75F53F0EA146C0386DF43F10440E40807CA8BF03013F40F00320BD24776D3FE93F04C07C1C4A3FD5F12C40BB2C863FA4877440FDC897BE43B6E93FA0C129C058CC21C045D95A401AFC7440E0343BBFF189A240943904C0BCCFAC3F100DBDC0316A5EBF2AFC413E49945F3F5A1C9740371E0BC0F38C8E3F2135E2BF651D3240F8B62D4036A84CC08F38AC40E567B83F41BE183DE3BF533EF3CE3EBF2BAC1D3FAFF60240540B743FAED754BF99A90AC02E320C3F24D05E4057AA313E5541F93F6152B340722687409DCF94BCC0156C3FFE910641B3C86E4012C94F40C5C71BC03F17A2C0AD1A334006FAEC3F5D1FA24089D7E33F833CE33F115FE93E5C0DF2BF6A043BC049A4523F6BE429404CFD15C01289D6C074451140B7D0F6BE834E88C008359E3E0FCB3540FB21B63EFB2A21BFED8986C00E4E6AC0C2AA3140FA7C83C0D06CC63FB0CBD6C0013C0341BA25BEBFE1D011404ADE45C0C56C77C0105288BFBF283CBFFEB25140303028BFE60C9A40395468BF0499423EE04B59BFA89A423D54B6A740B281C23F77FAE73E4F6735C040ADCF407D0FEFBFC27FEBBE269C58BF3C0C29400DCA8BBE8FD4AE3E595E153F3BD4D3C041CC1D3FBD625940E480E4BFDC59B440234529404124C53E717D0AC0"> : tensor<20x20xf32>}> : () -> tensor<20x20xf32>
    "func.return"(%1) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xf32>}> : () -> tensor<20x20xf32>
    "func.return"(%0) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

