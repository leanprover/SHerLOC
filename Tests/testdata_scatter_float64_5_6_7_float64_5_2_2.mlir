"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<5x6x7xf64>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %3 = "stablehlo.constant"() <{value = dense<[[[0, 1], [2, 3]], [[4, 0], [1, 2]]]> : tensor<2x2x2xi64>}> : () -> tensor<2x2x2xi64>
    %4:2 = "func.call"() <{callee = @inputs}> : () -> (tensor<5x6x7xf64>, tensor<5x2x2xf64>)
    %5 = "func.call"() <{callee = @expected}> : () -> tensor<5x6x7xf64>
    %6 = "stablehlo.scatter"(%4#0, %3, %4#1) <{scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [0], inserted_window_dims = [1, 2], scatter_dims_to_operand_dims = [1, 2], index_vector_dim = 2>, unique_indices = true}> ({
    ^bb0(%arg0: tensor<f64>, %arg1: tensor<f64>):
      "stablehlo.return"(%arg1) : (tensor<f64>) -> ()
    }) : (tensor<5x6x7xf64>, tensor<2x2x2xi64>, tensor<5x2x2xf64>) -> tensor<5x6x7xf64>
    "stablehlo.custom_call"(%6, %5) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<5x6x7xf64>, tensor<5x6x7xf64>) -> ()
    "func.return"(%6) : (tensor<5x6x7xf64>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> (tensor<5x6x7xf64>, tensor<5x2x2xf64>), res_attrs = [{mhlo.layout_mode = "default"}, {mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0xtensor<5x6x7xf64>}> : () -> tensor<5x6x7xf64>
    %2 = "stablehlo.constant"() <{value = dense<[[[2.1415817509648511, 4.1938719601866428], [-3.0236833610867357, -2.7673312548942612]], [[-1.7481817674044426, 0.076123201428400816], [0.18955761478392796, -2.2900746995194066]], [[0.6611928864140374, -3.0891000596455669], [2.1163850706277532, -1.6869461526772032]], [[4.8881946631406228, 1.637707621428127], [-4.0488591534777427, -5.7896296220892571]], [[0.48609888835058968, -0.39221532292465966], [3.9409344362725998, -0.50905661481516162]]]> : tensor<5x2x2xf64>}> : () -> tensor<5x2x2xf64>
    "func.return"(%1, %2) : (tensor<5x6x7xf64>, tensor<5x2x2xf64>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<5x6x7xf64>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0xtensor<5x6x7xf64>}> : () -> tensor<5x6x7xf64>
    "func.return"(%0) : (tensor<5x6x7xf64>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

