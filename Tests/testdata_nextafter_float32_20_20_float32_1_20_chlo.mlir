"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %3:2 = "func.call"() <{callee = @inputs}> : () -> (tensor<20x20xf32>, tensor<1x20xf32>)
    %4 = "func.call"() <{callee = @expected}> : () -> tensor<20x20xf32>
    %5 = "stablehlo.broadcast_in_dim"(%3#1) <{broadcast_dimensions = array<i64: 0, 1>}> : (tensor<1x20xf32>) -> tensor<20x20xf32>
    %6 = "chlo.next_after"(%3#0, %5) : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xf32>
    "stablehlo.custom_call"(%6, %4) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> ()
    "func.return"(%6) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> (tensor<20x20xf32>, tensor<1x20xf32>), res_attrs = [{mhlo.layout_mode = "default"}, {mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0x3CC2BFC0EC926B40DA7F83407093923F256E8F40070452BF98C0D9BFE74B5A408E559FBFA7C37140597DB84091DBFDBF4B019BC094B81340807BDDBFB5F53C40A8B4094044B2CF3F1290AFC0919FADC03064B3C07D33C6BFA7A969BEC94AAD40760E1E4087FA10C01E381EC09612A0407F1C16402CE94A401FF1154044421AC0E9758DBF362F96C06837B8BEF7B1E93D8986783DDCB3933FF7F483C0ABE4263EEF364EC0A0291FC0ACEB053FC12232C0448881BF528E8F403E68FA3E5B094F4041A286405B00E4C0607F03C084EE8DBF07787F3E695E1E407D4C63C0115A8A3F284DCC40970C3E3FB983923F880165BE03DA95BF947939C0C75C5140C8FA68BFBE2131C0116DEFBFA87E7DC089104CC0DF4225BF141F88406545D4C01F12953DBA839340F39C7F40CC22AFBFC269B0C08204D83F915CBE3F1CDBF8BF5482293F62AD8440A638243F7BD583C0C552D7C0F7DBC23F79685340DA9698C0570F2ABF286B86BF0D5F30408A38B7BED5DFD5BF39F695BF16ED8E40244ED4BF1DA18940E7E3FD40B3983BC0143E45BF70471BC067DD5D3FF48BA8404F62FA3F48BE1F403F37AD40439917C0E8138A3E7ACC7940F34B5CBE3DED7540DF9673C09EF82AC0B53607BF98411B40920298C0C6395140EADCA7BFAEDCEE3ED06246C0E116A8C0310693C00F7804C0831C3C404823DBBEAB9F1CC0B92392BE3977E73F2626D03F7445E53EEF3D87BE013F1DBFE5C2E83FC3B89EBFD05630BF7660A1BF2E319EBF513938BFB6295BBFE9E035BF503941C07C3C2BBE6F5342C0EEE3A43FD0BA8AC0533D09404D4856C02DEC803FF84EC7C001041240AAFAF3BF36C3CC3E7F1DB34037EFF43F95D799C052640E417E8533C0885110C07B7525C0F35283C097C097BEBC548C40B443D0BF800168BE8C8D0940993C8B40AB3132C0518AA63F92799EBFF7F02C40792E96C09FA70740FBFACDBFAF450E406CB32F40B794D1BF26D29240678A65BF54ECB13D6418114016828F40C10A843E562123402F02DBC0DF0CB24011621C40CFC90CC0191B823F798E80C0EB3C583FDDD5003F3B144DBF69C38F403C28C9BFDF3039C0995B844053BC0CC041DE78C07DE20E40694F043E56D499C0EDCDB04099BC6440EA6B02C0D2B78F3FFE8500C1F31C46405CFB29C0353C2CC0013518C019F9EF405B352D40D64537C003897B3FE6E9E7BFA062B6C00EAD003F0140913FD21145C0C29B813FEF74CBBF2845DFC0E856C6BF148F9B3F4D5B0F3F5D5165C07645BE3F39678BC0C8C230BF1484E9BF6A791E4159C3DA3F9C8D27407680E43E2EAA80400E3A9B4078E5823F3D8028C01DDF76BFD27C4C400CE64F401CF87640780505C0FF915840B12551BF78D5CE3E6F789EC0AB7EF63FEE228040D3F71840D26732C041B32FC08E92E1C0080D32C0D11588C0AF8939C06D381C407CEF16C000A58C3F17C3D84089B61CBF7A5AE53E3A1B46C0752CF33FBD98BBBFB33111408BC2F83E9AE90ABFA874973FED8CA1BF0074C5C0FD0851C0C364F0BE7063E6BEBC7258C0C737E83F203C58C0998EB6C0BD3901C07301E53FEBCECD3FAE332D404E1997C0B2527A4091B24BC08419A0BFF94B02407B490EC0C99B7C4040EBDC3F983123C0393F2140454E2EC0662447402D803E403EB2FFC00D8309C05C11B2401F6946C0A76B26C0471803BFF0CD10C00A0887BFC6DE5DBE449210408CEA8C3F150296BFF3BB17408E8A83C0E6AB8F40096830C01EE6B4C0F3573BC0C6252240700887BE5A85A3C07F07143D0CA70CBEEBC1B6408897C33F88821E3F4CEE7C40E8E00AC096AD73C0CFF10BC0CD7A0E3F0AC385BF4B81A2C0DAD344BF000679C024DB6BBC8DAD8C3F3C4D16C0BACDC13BCE2497BF5C560AC03A96303E9C57E6BF787C6040234FF43E07788DBCC347243F7595F4BE2F665AC056A9CF3F0571F33EA195C5BEEE532CBF005B93C03AABB13F166A00C0502E45407C159AC0AB78A8C02A30BC3F21A0E0406F9201414E55C2BD606FD140B8DB583F22C85A3E83B91DC0EF9A63C0026B3C404C4A8D40A9E1C23DF9AF813F9E60D44076CACD3E684834BDD2E454C08958BB3FCDF7B1BF6C562540279E08403D9F9640FBA813C080B2A3BF4FA39940710C8840E20008C099A2B04084A78840D71530C01BB41ABFB6AA0D4024D9B2BF1078D83F870D2DBFB08049BFD327B8BFB5AAB1C0E4CD8A3FA4C61D3F7D1891BEA4867C40311481C048664640445894C08960A6C072A67A3F"> : tensor<20x20xf32>}> : () -> tensor<20x20xf32>
    %2 = "stablehlo.constant"() <{value = dense<[[0.890083789, -0.391410112, 0.785428106, -2.48780227, -1.64509737, -2.00489521, -3.22067952, -0.765830755, 4.66394377, 0.576535881, 1.49292409, 1.30754411, -1.3839196, 1.31058586, -1.05118334, -1.20111048, 0.0510369912, -3.10041928, 3.82744455, -0.814175069]]> : tensor<1x20xf32>}> : () -> tensor<1x20xf32>
    "func.return"(%1, %2) : (tensor<20x20xf32>, tensor<1x20xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xf32>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xf32>}> : () -> tensor<20x20xf32>
    "func.return"(%0) : (tensor<20x20xf32>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

