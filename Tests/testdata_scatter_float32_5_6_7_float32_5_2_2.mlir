"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<5x6x7xf32>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %3 = "stablehlo.constant"() <{value = dense<[[[0, 1], [2, 3]], [[4, 0], [1, 2]]]> : tensor<2x2x2xi64>}> : () -> tensor<2x2x2xi64>
    %4:2 = "func.call"() <{callee = @inputs}> : () -> (tensor<5x6x7xf32>, tensor<5x2x2xf32>)
    %5 = "func.call"() <{callee = @expected}> : () -> tensor<5x6x7xf32>
    %6 = "stablehlo.scatter"(%4#0, %3, %4#1) <{scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [0], inserted_window_dims = [1, 2], scatter_dims_to_operand_dims = [1, 2], index_vector_dim = 2>, unique_indices = true}> ({
    ^bb0(%arg0: tensor<f32>, %arg1: tensor<f32>):
      "stablehlo.return"(%arg1) : (tensor<f32>) -> ()
    }) : (tensor<5x6x7xf32>, tensor<2x2x2xi64>, tensor<5x2x2xf32>) -> tensor<5x6x7xf32>
    "stablehlo.custom_call"(%6, %5) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<5x6x7xf32>, tensor<5x6x7xf32>) -> ()
    "func.return"(%6) : (tensor<5x6x7xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> (tensor<5x6x7xf32>, tensor<5x2x2xf32>), res_attrs = [{mhlo.layout_mode = "default"}, {mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0xtensor<5x6x7xf32>}> : () -> tensor<5x6x7xf32>
    %2 = "stablehlo.constant"() <{value = dense<[[[6.24649524, 2.08229446], [-0.944173098, 2.64017892]], [[1.87537599, -1.83636093], [-2.78156734, -7.40136099]], [[-4.70128107, -1.35021031], [-2.68029976, -0.31766665]], [[0.455216348, 1.29136562], [0.247529611, -0.779549777]], [[5.76326847, -2.00456238], [0.601839244, 0.353696078]]]> : tensor<5x2x2xf32>}> : () -> tensor<5x2x2xf32>
    "func.return"(%1, %2) : (tensor<5x6x7xf32>, tensor<5x2x2xf32>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<5x6x7xf32>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0xtensor<5x6x7xf32>}> : () -> tensor<5x6x7xf32>
    "func.return"(%0) : (tensor<5x6x7xf32>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

