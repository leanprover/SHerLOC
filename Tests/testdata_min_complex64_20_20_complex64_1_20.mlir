"builtin.module"() <{sym_name = "jit_main"}> ({
  "func.func"() <{function_type = () -> tensor<20x20xcomplex<f32>>, res_attrs = [{jax.result_info = "", mhlo.layout_mode = "default"}], sym_name = "main", sym_visibility = "public"}> ({
    %3:2 = "func.call"() <{callee = @inputs}> : () -> (tensor<20x20xcomplex<f32>>, tensor<1x20xcomplex<f32>>)
    %4 = "func.call"() <{callee = @expected}> : () -> tensor<20x20xcomplex<f32>>
    %5 = "stablehlo.broadcast_in_dim"(%3#1) <{broadcast_dimensions = array<i64: 0, 1>}> : (tensor<1x20xcomplex<f32>>) -> tensor<20x20xcomplex<f32>>
    %6 = "stablehlo.real"(%3#0) : (tensor<20x20xcomplex<f32>>) -> tensor<20x20xf32>
    %7 = "stablehlo.real"(%5) : (tensor<20x20xcomplex<f32>>) -> tensor<20x20xf32>
    %8 = "stablehlo.compare"(%6, %7) <{compare_type = #stablehlo<comparison_type FLOAT>, comparison_direction = #stablehlo<comparison_direction EQ>}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xi1>
    %9 = "stablehlo.compare"(%6, %7) <{compare_type = #stablehlo<comparison_type FLOAT>, comparison_direction = #stablehlo<comparison_direction LT>}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xi1>
    %10 = "stablehlo.imag"(%3#0) : (tensor<20x20xcomplex<f32>>) -> tensor<20x20xf32>
    %11 = "stablehlo.imag"(%5) : (tensor<20x20xcomplex<f32>>) -> tensor<20x20xf32>
    %12 = "stablehlo.compare"(%10, %11) <{compare_type = #stablehlo<comparison_type FLOAT>, comparison_direction = #stablehlo<comparison_direction LT>}> : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<20x20xi1>
    %13 = "stablehlo.select"(%8, %12, %9) : (tensor<20x20xi1>, tensor<20x20xi1>, tensor<20x20xi1>) -> tensor<20x20xi1>
    %14 = "stablehlo.select"(%13, %3#0, %5) : (tensor<20x20xi1>, tensor<20x20xcomplex<f32>>, tensor<20x20xcomplex<f32>>) -> tensor<20x20xcomplex<f32>>
    "stablehlo.custom_call"(%14, %4) <{call_target_name = "check.expect_close", has_side_effect = true}> : (tensor<20x20xcomplex<f32>>, tensor<20x20xcomplex<f32>>) -> ()
    "func.return"(%14) : (tensor<20x20xcomplex<f32>>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> (tensor<20x20xcomplex<f32>>, tensor<1x20xcomplex<f32>>), res_attrs = [{mhlo.layout_mode = "default"}, {mhlo.layout_mode = "default"}], sym_name = "inputs", sym_visibility = "private"}> ({
    %1 = "stablehlo.constant"() <{value = dense<"0xtensor<20x20xcomplex<f32>>}> : () -> tensor<20x20xcomplex<f32>>
    %2 = "stablehlo.constant"() <{value = dense<[[(-0.482971191,-3.39081264), (-0.241694033,1.72531652), (-3.60436177,-1.02911222), (0.480432272,-0.719147444), (1.51099253,0.310241163), (1.09382558,-2.77584052), (-4.13671112,0.763790726), (-4.07759285,-3.09834385), (-6.01340437,-3.20721507), (3.14195967,-0.416658133), (2.8833158,-2.29729128), (-0.0395150185,1.88493919), (1.63824189,-4.51782608), (-2.23595428,0.452164978), (-1.33319104,-2.4275353), (-1.95890176,-2.24941349), (-7.61657476,2.76243401), (-3.6695478,-1.60622299), (4.89775276,-0.0444382206), (3.75894237,1.56284845)]]> : tensor<1x20xcomplex<f32>>}> : () -> tensor<1x20xcomplex<f32>>
    "func.return"(%1, %2) : (tensor<20x20xcomplex<f32>>, tensor<1x20xcomplex<f32>>) -> ()
  }) : () -> ()
  "func.func"() <{function_type = () -> tensor<20x20xcomplex<f32>>, res_attrs = [{mhlo.layout_mode = "default"}], sym_name = "expected", sym_visibility = "private"}> ({
    %0 = "stablehlo.constant"() <{value = dense<"0x0048F7BE130359C0A47E77BE2CD7DC3FDDAD66C0F3B983BFBFF05DC041C05C403468C13FEED79E3EA62F06C01D398CC0F05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC048BC70BF83ED5840283BF83C776DCFBF80DA21BDB045F13F15E33CC09F2997BFE0190FC02B82E73E59C894C08118FCBF4BBDFABF64F60FC0FBBAF3C0B8CB3040DFD96AC0B798CDBF5D4B184017D3A2C0C39CD93FBD9BB4C00048F7BE130359C059C881C000D8A3C0DDAD66C0F3B983BF47C7F2BF3376D5409026C53E29C3A63F7A028C3F5FA731C0F05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC0DF7693C04AC7424003661EC08EA40CC080DA21BDB045F13F9055EABFE2787EBEE0190FC02B82E73E01A6AABFBD5C1BC04BBDFABF64F60FC0FBBAF3C0B8CB3040DFD96AC0B798CDBF880B973D91E1FDBE839270406B0BC83FF7B64EC013010E3FA47E77BE2CD7DC3FDDAD66C0F3B983BFEAA5B1BF8439E33FEB1D7FBE70D7CF407A028C3F5FA731C0F05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC0B3FEB7C0910A663F2CE1ACC0278849C0B42814C0A24D3440E9B1D13F089290C0E0190FC02B82E73E01A6AABFBD5C1BC04BBDFABF64F60FC0FBBAF3C0B8CB3040DFD96AC0B798CDBF16AF27C0E4A6D93F02A5B2BFACD2B6BF0048F7BE130359C0A47E77BE2CD7DC3FDDAD66C0F3B983BF7155C13E4788E1403468C13FEED79E3E7A028C3F5FA731C0F05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC0F8AEC23E49995B40DB404DBE46CC16C080DA21BDB045F13F42BFC33F6743303EE0190FC02B82E73E01A6AABFBD5C1BC04BBDFABF64F60FC0FBBAF3C0B8CB3040DFD96AC0B798CDBFEA851FC02774543FA4F60CC02FF7FCBE1E3DC2BF13FD7FBF22A04BC078DE1240DDAD66C0F3B983BF38FBF53E0C1A38BF61897B3CB6EA353FCB1E423F9A8C913FF05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC092DD813D6E4576C0E498D73F3A3C6FC082200CC04CD6BDBEE9B1D13F089290C0E0190FC02B82E73E01A6AABFBD5C1BC0817F3AC0F52C393FFBBAF3C0B8CB3040DFD96AC0B798CDBF4C41BABFF44141C0548EA7C0F02C39C052771CC01CAC87BEA47E77BE2CD7DC3F681492C06896C33F38FBF53E0C1A38BF3468C13FEED79E3E6D95B3BF87377F3EF05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC0763E9EBEC67B513F0814F73E295CCBBE80DA21BDB045F13FE9B1D13F089290C0E0190FC02B82E73E01A6AABFBD5C1BC04BBDFABF64F60FC0FBBAF3C0B8CB3040DFD96AC0B798CDBF256DB8C097FD6FC004F13B3F037023C00048F7BE130359C0A47E77BE2CD7DC3FDDAD66C0F3B983BFA9A24FBF79700ABF3468C13FEED79E3E7A028C3F5FA731C0F05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC094F8A83FFA316FBF96ACC8BFDA67433F80DA21BDB045F13FD47CA53F98ACACBFE0190FC02B82E73E01A6AABFBD5C1BC0F9A481C0A6F63EC0FBBAF3C0B8CB3040DFD96AC0B798CDBF50C448C01C7905C0BB707CC05D1633400048F7BE130359C048A82BC058690BC0DDAD66C0F3B983BF38FBF53E0C1A38BF18AFE93DFDA73240330031BF7D4D87BFF05F84C0CA87433F5FB985C02E2295C0CF6DC0C003434DC07AD47AC0B9B26440AD2CA1C02F45C44080DA21BDB045F13F01AF7B3F3E660540796619C08520613E7AB102C085AD7BC04BBDFABF64F60FC0FBBAF3C0B8CB3040DFD96AC0B798CDBFC1CB923F87D387C0B88F893F085B60C00048F7BE130359C032ACFCBF3E5FFFBEDDAD66C0F3B983BF716B8F3E298FE140BFB9CBBEB3705BBF7A028C3F5FA731C0F05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC0440B054094851D407B3961C07715304080DA21BDB045F13FE9B1D13F089290C00FC6E2C0DF71394001A6AABFBD5C1BC04BBDFABF64F60FC0FBBAF3C0B8CB30407A07C6C029B829C04C1A52BFBD60DEBF52BFD3C0200A163F0048F7BE130359C0A47E77BE2CD7DC3FDDAD66C0F3B983BF38FBF53E0C1A38BF8D1FE4C0040951407E1BD4BF6FB3923FF05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC0D8C6A3BF8808CE409746A8C00AA46CC080DA21BDB045F13F7482DAC07146B740E0190FC02B82E73E01A6AABFBD5C1BC04BBDFABF64F60FC0FBBAF3C0B8CB3040DFD96AC0B798CDBFBABB9AC0F6845EC05CC664C071B43C3FD72BEEBFAFC4EA3FA47E77BE2CD7DC3FDDAD66C0F3B983BFCCE7943ED375C4402A8510BFDDAA65BEC699E7BF0EE8563FF05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC0C2B334C0F0641EC0394E55C09E1CC6BF80DA21BDB045F13F1E92ABC0D6FD88C0E0190FC02B82E73EBBE69FC0B12243C04BBDFABF64F60FC0FBBAF3C0B8CB3040DFD96AC0B798CDBF2DF0A2BF47F360C085BF8E3EE4F153400048F7BE130359C0F6FFEABFE0D5BA3FDDAD66C0F3B983BF38FBF53E0C1A38BF71B880C021E8A33F19BAD93EC21198BDF05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC05FA7DE3E990F01401215A2C0914BD7BE63419CBFB294D3C092D61CBFB069D440E0190FC02B82E73E01A6AABFBD5C1BC04BBDFABF64F60FC0FBBAF3C0B8CB30403E6B89C0DD33973FB64186C038F2933D41A6A83FFE456D401649DEC03B5C233E03EF0EC1AC292EC0DDAD66C0F3B983BF38FBF53E0C1A38BF4566B2BF6715B1BEC6D6A7C0EA690540F05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC002C67EC0E815CFBFF3F6AFC00F208DBF80DA21BDB045F13FE9B1D13F089290C0E0190FC02B82E73EC02EDDBF2BC053404BBDFABF64F60FC0FBBAF3C0B8CB3040DFD96AC0B798CDBFD2043E402A120940DF567EBF9A2CF63F0048F7BE130359C0A47E77BE2CD7DC3FDDAD66C0F3B983BF38FBF53E0C1A38BFBE9230BEEB04A23D7A028C3F5FA731C0F05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC0211A2940297D4B402CF2BB3F11291F40CDB102C067F4D9BD7076B93FA83413C0E0190FC02B82E73E01A6AABFBD5C1BC039D82BC0F96A8440FBBAF3C0B8CB3040DFD96AC0B798CDBF6B46BA3F498F7440D3417AC0BEEC02BFE4EF00C0DE7C0140AA5ABDBFAF2F3ABFDDAD66C0F3B983BF38FBF53E0C1A38BF6A5204BFECA86EC08ED3D2BFBF60C83FF05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC092ADBCBF953ECBBF7DE0DD3E3CD337415A4CA0BD79E93BC0E9B1D13F089290C088E397C06222564001A6AABFBD5C1BC04BBDFABF64F60FC0FBBAF3C0B8CB3040DFD96AC0B798CDBF09B71DBDF8082540FABF0F40E79F2DC07177FCBF202A05BFBE40BABFAAB26F3FDDAD66C0F3B983BFCD15D6BFCA772740992AA8C04739AD401A60B9BD52328D40F05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC0264E64C0DF23C0BF45CC64C0167F54BF80DA21BDB045F13FFFAD323FE5FC2140E0190FC02B82E73EA3C0B1C02B599FBF4BBDFABF64F60FC0FBBAF3C0B8CB3040DFD96AC0B798CDBF6684B2BF40281C3E441826C096DA9F400048F7BE130359C0A47E77BE2CD7DC3FDDAD66C0F3B983BF38FBF53E0C1A38BF19DFEABF22D4F0BE1AA6CCC08A1A12C0F05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC0480015BC8F096A403F883840D20613C080DA21BDB045F13F21D7DABFBFC72440E0190FC02B82E73E01A6AABFBD5C1BC04BBDFABF64F60FC0FBBAF3C0B8CB3040DFD96AC0B798CDBF5810124016FEACBF2F3B5B40A185E83F0048F7BE130359C0A47E77BE2CD7DC3FDDAD66C0F3B983BF38FBF53E0C1A38BFDAA617BE142925C07A028C3F5FA731C0F05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC0EADB38C0B4EA004095595BC027DAD63E80DA21BDB045F13FE9B1D13F089290C0E0190FC02B82E73E01A6AABFBD5C1BC04BBDFABF64F60FC0FBBAF3C0B8CB3040DFD96AC0B798CDBFCBE3784006F93340D0013CBE188334BF408272C092BD40C0A47E77BE2CD7DC3FDDAD66C0F3B983BF38FBF53E0C1A38BF4CA5743F562EA43DB4F5ABBEF702FEBFF05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC058CF0FC0B89494BFE53A2C40DF65853F80DA21BDB045F13F31EA3FC03F361840E0190FC02B82E73E01A6AABFBD5C1BC04BBDFABF64F60FC0FBBAF3C0B8CB3040DFD96AC0B798CDBF8D1F8F3F6B8B4F3F84D2ABC0C14F56C088ACACC0E55DAABF046BE2C030CA3740DDAD66C0F3B983BF38FBF53E0C1A38BF3BCA453FD087783C7A028C3F5FA731C0F05F84C0CA87433FA47B82C0444B46C0CF6DC0C003434DC0821341C00038D3C04B14AEBF991E2E404A41ABC0FD347840E9B1D13F089290C09E1881C0CA751EBF2DAC6EC0D24B6C3E4BBDFABF64F60FC0FBBAF3C0B8CB3040DFD96AC0B798CDBFB26E5B404913993E6D11BABF518CC23E"> : tensor<20x20xcomplex<f32>>}> : () -> tensor<20x20xcomplex<f32>>
    "func.return"(%0) : (tensor<20x20xcomplex<f32>>) -> ()
  }) : () -> ()
}) {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} : () -> ()

